/* normalize.css v3.0.2 | MIT License | git.io/normalize */
/*
* 1. Set default font family to sans-serif.
* 2. Prevent iOS text size adjust after orientation change, without disabling
*    user zoom.
*/
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/*
* Remove default margin.
*/
body {
  margin: 0;
}

/* HTML5 display definitions
========================================================================== */
/*
* Correct `block` display not defined for any HTML5 element in IE 8/9.
* Correct `block` display not defined for `details` or `summary` in IE 10/11
* and Firefox.
* Correct `block` display not defined for `main` in IE 11.
*/
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/*
* 1. Correct `inline-block` display not defined in IE 8/9.
* 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
*/
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/*
* Prevent modern browsers from displaying `audio` without controls.
* Remove excess height in iOS 5 devices.
*/
audio:not([controls]) {
  display: none;
  height: 0;
}

/*
* Address `[hidden]` styling not present in IE 8/9/10.
* Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
*/
[hidden],
template {
  display: none;
}

/* Links
========================================================================== */
/*
* Remove the gray background color from active links in IE 10.
*/
a {
  background-color: transparent;
}

/*
* Improve readability when focused and also mouse hovered in all browsers.
*/
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
========================================================================== */
/*
* Address styling not present in IE 8/9/10/11, Safari, and Chrome.
*/
abbr[title] {
  border-bottom: 1px dotted;
}

/*
* Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
*/
b,
strong {
  font-weight: bold;
}

/*
* Address styling not present in Safari and Chrome.
*/
dfn {
  font-style: italic;
}

/*
* Address variable `h1` font-size and margin within `section` and `article`
* contexts in Firefox 4+, Safari, and Chrome.
*/
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/*
* Address styling not present in IE 8/9.
*/
mark {
  background: #ff0;
  color: #000;
}

/*
* Address inconsistent and variable font size in all browsers.
*/
small {
  font-size: 80%;
}

/*
* Prevent `sub` and `sup` affecting `line-height` in all browsers.
*/
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
========================================================================== */
/*
* Remove border when inside `a` element in IE 8/9/10.
*/
img {
  border: 0;
}

/*
* Correct overflow not hidden in IE 9/10/11.
*/
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
========================================================================== */
/*
* Address margin not present in IE 8/9 and Safari.
*/
figure {
  margin: 1em 40px;
}

/*
* Address differences between Firefox and other browsers.
*/
hr {
  box-sizing: content-box;
  height: 0;
}

/*
* Contain overflow in all browsers.
*/
pre {
  overflow: auto;
}

/*
* Address odd `em`-unit font size rendering in all browsers.
*/
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
========================================================================== */
/*
* Known limitation: by default, Chrome and Safari on OS X allow very limited
* styling of `select`, unless a `border` property is set.
*/
/*
* 1. Correct color not being inherited.
*    Known issue: affects color of disabled elements.
* 2. Correct font properties not being inherited.
* 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
*/
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/*
* Address `overflow` set to `hidden` in IE 8/9/10/11.
*/
button {
  overflow: visible;
}

/*
* Address inconsistent `text-transform` inheritance for `button` and `select`.
* All other form control elements do not inherit `text-transform` values.
* Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
* Correct `select` style inheritance in Firefox.
*/
button,
select {
  text-transform: none;
}

/*
* 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
*    and `video` controls.
* 2. Correct inability to style clickable `input` types in iOS.
* 3. Improve usability and consistency of cursor style between image-type
*    `input` and others.
*/
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/*
* Re-set default cursor for disabled elements.
*/
button[disabled],
html input[disabled] {
  cursor: default;
}

/*
* Remove inner padding and border in Firefox 4+.
*/
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/*
* Address Firefox 4+ setting `line-height` on `input` using `!important` in
* the UA stylesheet.
*/
input {
  line-height: normal;
}

/*
* It's recommended that you don't attempt to style these elements.
* Firefox's implementation doesn't respect box-sizing, padding, or width.
*
* 1. Address box sizing set to `content-box` in IE 8/9/10.
* 2. Remove excess padding in IE 8/9/10.
*/
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/*
* Fix the cursor style for Chrome's increment/decrement buttons. For certain
* `font-size` values of the `input`, it causes the cursor style of the
* decrement button to change from `default` to `text`.
*/
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/*
* 1. Address `appearance` set to `searchfield` in Safari and Chrome.
* 2. Address `box-sizing` set to `border-box` in Safari and Chrome
*    (include `-moz` to future-proof).
*/
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box;
}

/*
* Remove inner padding and search cancel button in Safari and Chrome on OS X.
* Safari (but not Chrome) clips the cancel button when the search input has
* padding (and `textfield` appearance).
*/
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
* Define consistent border, margin, and padding.
*/
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/*
* 1. Correct `color` not being inherited in IE 8/9/10/11.
* 2. Remove padding so people aren't caught out if they zero out fieldsets.
*/
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/*
* Remove default vertical scrollbar in IE 8/9/10/11.
*/
textarea {
  overflow: auto;
}

/*
* Don't inherit the `font-weight` (applied by a rule above).
* NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
*/
optgroup {
  font-weight: bold;
}

/* Tables
========================================================================== */
/*
* Remove most spacing between table cells.
*/
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

[hidden] {
  display: none;
}

.visually-hidden {
  position: absolute;
  clip: rect(0, 0, 0, 0);
}

.is-sticky {
  position: fixed !important;
  z-index: 25;
}

@viewport {
  zoom: 1.0;
  width: device-width;
  height: device-height;
}

@-ms-viewport {
  zoom: 1.0;
  width: device-width;
  height: device-height;
}

html {
  overflow-x: hidden;
  overflow-y: scroll;
  -webkit-overflow-scrolling: touch;
  /* scrollbars in IE */
  scrollbar-base-color: #1a2024;
  scrollbar-face-color: #4e5162;
  scrollbar-track-color: #1a2024;
  scrollbar-3dlight-color: #4e5162;
  scrollbar-highlight-color: #4e5162;
  scrollbar-arrow-color: #4e5162;
  scrollbar-darkshadow-color: #4e5162;
  scrollbar-shadow-color: #4e5162;
  /* webkit scrollbar styling */
}

html ::-webkit-scrollbar {
  background: #141a1e;
}

html ::-webkit-scrollbar-track {
  background: transparent;
}

html ::-webkit-scrollbar-thumb {
  background: #4e5162;
}

html ::-webkit-scrollbar-thumb:hover {
  background: #c3c3ce;
}

html body {
  position: relative;
  min-height: 100%;
  min-width: 320px;
  line-height: 1.42857;
  max-width: 100%;
  font-family: 'Noto Sans', 'Body Fallback', sans-serif;
  font-size: 20px;
  touch-action: pan-y;
  -webkit-overflow-scrolling: touch;
  -ms-overflow-style: -ms-autohiding-scrollbar;
  -ms-touch-action: pan-y;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

html body.windows-phone {
  height: 100vh;
}

html.no-scrolling {
  overflow: hidden;
  touch-action: none;
  -webkit-overflow-scrolling: auto;
  -ms-overflow-style: none;
  -ms-touch-action: none;
}

html.no-scrolling body {
  max-height: 100vh;
  -ms-touch-action: none;
      touch-action: none;
}

@media screen and (max-width: 750px) {
  html.no-scrolling body.new-android {
    overflow: hidden;
    overflow-y: hidden;
    overflow-x: hidden;
  }
}

html.no-scrolling body.windows-phone {
  overflow-y: hidden;
}

a,
a:active,
a:visited {
  color: inherit;
  text-decoration: none;
}

a:hover {
  text-decoration: none;
}

h1 {
  font-size: 26px;
  color: #fff;
  font-weight: normal;
}

h2 {
  font-size: 20px;
  font-weight: normal;
  line-height: 14px;
}

h3 {
  font-size: 16px;
  font-weight: normal;
}

fieldset {
  margin: 0;
  padding: 0;
  border: 0;
}

input[type="text"],
input[type="password"],
input[type="email"],
input[type="url"],
input[type="date"],
input[type="month"],
input[type="time"],
input[type="datetime"],
input[type="datetime-local"],
input[type="week"],
input[type="number"],
input[type="search"],
input[type="country"],
input[type="tel"],
input[type="color"],
select,
textarea {
  box-sizing: border-box;
  height: 41px;
  line-height: 41px;
  display: inline-block;
  border: 0;
  padding: 0 0.8em 0 0.8em;
  background-color: rgba(0, 0, 0, 0.35);
}

textarea {
  resize: none;
}

ol, ul {
  margin: 0;
  padding: 0;
}

ol li, ul li {
  padding: 0;
}

button {
  border: 0;
  background: transparent;
}

hr {
  border: 0 none;
  border-top: 1px solid #101417;
  margin: 0;
  padding: 0;
  height: 0;
  overflow: hidden;
}

[visible] {
  transition-property: opacity, transform;
  transition-timing-function: ease-out;
  transition-delay: 0, 0;
  transition-duration: .5s, .5s !important;
  opacity: 0 !important;
  transform: translateY(20px) !important;
}

[visible]:nth-child(1) {
  transition-delay: 0.4s, 0.4s;
}

[visible]:nth-child(2) {
  transition-delay: 0.8s, 0.8s;
}

[visible]:nth-child(3) {
  transition-delay: 1.2s, 1.2s;
}

[visible]:nth-child(4) {
  transition-delay: 1.6s, 1.6s;
}

[visible]:nth-child(5) {
  transition-delay: 2s, 2s;
}

[visible]:nth-child(6) {
  transition-delay: 2.4s, 2.4s;
}

[visible]:nth-child(7) {
  transition-delay: 2.8s, 2.8s;
}

[visible]:nth-child(8) {
  transition-delay: 3.2s, 3.2s;
}

[visible]:nth-child(9) {
  transition-delay: 3.6s, 3.6s;
}

[visible]:nth-child(10) {
  transition-delay: 4s, 4s;
}

[visible]:nth-child(11) {
  transition-delay: 4.4s, 4.4s;
}

[visible]:nth-child(12) {
  transition-delay: 4.8s, 4.8s;
}

[visible]:nth-child(13) {
  transition-delay: 5.2s, 5.2s;
}

[visible]:nth-child(14) {
  transition-delay: 5.6s, 5.6s;
}

[visible]:nth-child(15) {
  transition-delay: 6s, 6s;
}

[visible]:nth-child(16) {
  transition-delay: 6.4s, 6.4s;
}

[visible]:nth-child(17) {
  transition-delay: 6.8s, 6.8s;
}

[visible]:nth-child(18) {
  transition-delay: 7.2s, 7.2s;
}

[visible]:nth-child(19) {
  transition-delay: 7.6s, 7.6s;
}

[visible]:nth-child(20) {
  transition-delay: 8s, 8s;
}

[visible="true"] {
  opacity: 1 !important;
  transform: translateY(0) !important;
}

[visible="false"] {
  opacity: 0 !important;
  transition-duration: .1s, .1s !important;
  transform: translateY(20px) !important;
}

svg.icon {
  vertical-align: middle;
}

svg.icon .text {
  fill: #454750;
  transition: fill .1s;
}

svg.icon .background {
  fill: transparent;
  transition: fill 1s;
}

.has-cursor svg.icon:hover .text {
  fill: #cfcfdb;
}

.has-cursor svg.icon:hover .background {
  fill: #171c1f;
}

svg.icon[variant*="negative"] .text {
  fill: #cfcfdb;
}

svg.icon[variant*="negative"] .background {
  fill: rgba(16, 20, 23, 0.8);
}

.has-cursor svg.icon[variant*="negative"]:hover .text {
  fill: #0b0e10;
}

.has-cursor svg.icon[variant*="negative"]:hover .background {
  fill: #ffffff;
}

svg.icon[variant*="switch"] .text {
  opacity: 0;
  transition: fill 0.1s, opacity 0.5s;
}

.rtf {
  font-size: 14px;
  line-height: 1.8em;
}

.rtf h2 {
  font-family: 'Title', 'Title Fallback 1', 'Title Fallback 2', sans-serif;
  font-size: 56px;
  line-height: 1.2em;
  text-transform: uppercase;
  margin: 0;
  letter-spacing: -1.2px;
}

.rtf h3 {
  font-family: 'Title', 'Title Fallback 1', 'Title Fallback 2', sans-serif;
  font-size: 45px;
  line-height: 1.2em;
  text-transform: uppercase;
  margin: 0;
  letter-spacing: -0.5px;
}

.rtf h4 {
  font-family: 'Title', 'Title Fallback 1', 'Title Fallback 2', sans-serif;
  font-size: 35px;
  line-height: 1.2em;
  text-transform: uppercase;
  margin: 0;
  letter-spacing: -0.3px;
}

.rtf h5 {
  font-family: 'Title', 'Title Fallback 1', 'Title Fallback 2', sans-serif;
  font-size: 25px;
  line-height: 1.2em;
  text-transform: uppercase;
  margin: 0;
}

.rtf h2, .rtf h3, .rtf h4, .rtf h5 {
  margin-bottom: 10px;
}

.rtf ul:not([class]) {
  margin-left: 1.25em;
}

.rtf p,
.rtf li:not([class]),
.rtf p.body-text,
.rtf .body-text {
  font-size: 14px;
  line-height: 1.78em;
  margin: 0 0 30px;
}

.rtf p.intro-text,
.rtf .intro-text {
  font-size: 14px;
  line-height: 1.68em;
  font-weight: 700;
}

.rtf .annotation,
.rtf p.annotation {
  font-size: 11px;
  line-height: 1.54em;
  color: #9898ab;
}

.rtf a {
  color: #47a742;
}

.rtf .button-black-transparent-border,
.rtf .button-black-transparent,
.rtf .button-black,
.rtf .button-green-dark,
.rtf .button-green,
.rtf .button-green-light,
.rtf .button-transparent-border,
.rtf .button-white-border {
  display: inline-block;
  padding: 28px 30px;
  margin: 0 5px 5px 0;
  line-height: 1;
  min-height: 70px;
  min-width: 267px;
  text-align: center;
  background-image: url("/browser-resources/img/button-hover.png");
  background-position: center;
  background-clip: padding-box;
  background-size: 0%;
  background-repeat: no-repeat;
  box-shadow: inset 0 0 0 0 rgba(255, 255, 255, 0);
  box-sizing: border-box;
  color: white;
  font-family: 'Title', 'Title Fallback 1', 'Title Fallback 2', sans-serif;
  text-transform: uppercase;
  transition: background-color .8s, background-size .3s ease-out, color .1s, box-shadow 0.4s;
}

@media screen and (max-width: 750px) {
  .rtf .button-black-transparent-border,
  .rtf .button-black-transparent,
  .rtf .button-black,
  .rtf .button-green-dark,
  .rtf .button-green,
  .rtf .button-green-light,
  .rtf .button-transparent-border,
  .rtf .button-white-border {
    width: 100%;
    margin: 0;
  }
}

.has-cursor .rtf .button-black-transparent-border:hover, .rtf .button-black-transparent-border[state="active"], .has-cursor
.rtf .button-black-transparent:hover,
.rtf .button-black-transparent[state="active"], .has-cursor
.rtf .button-black:hover,
.rtf .button-black[state="active"], .has-cursor
.rtf .button-green-dark:hover,
.rtf .button-green-dark[state="active"], .has-cursor
.rtf .button-green:hover,
.rtf .button-green[state="active"], .has-cursor
.rtf .button-green-light:hover,
.rtf .button-green-light[state="active"], .has-cursor
.rtf .button-transparent-border:hover,
.rtf .button-transparent-border[state="active"], .has-cursor
.rtf .button-white-border:hover,
.rtf .button-white-border[state="active"] {
  background-size: 115%;
  background-color: white;
  color: #000000;
  transition: background-color .8s, background-size .3s ease-in, color .1s, box-shadow 0.4s;
}

@media screen and (max-width: 750px) {
  .rtf .button-black-transparent-border,
  .rtf .button-black-transparent,
  .rtf .button-black,
  .rtf .button-green-dark,
  .rtf .button-green,
  .rtf .button-green-light,
  .rtf .button-transparent-border,
  .rtf .button-white-border {
    min-width: 200px;
    text-align: center;
  }
}

.rtf .button-black-transparent-border {
  background-color: rgba(23, 28, 31, 0.8);
  box-shadow: inset 0 0 0 3px white;
}

.rtf .button-black-transparent {
  background-color: rgba(23, 28, 31, 0.8);
}

.rtf .button-black {
  background-color: #0b0e10;
}

.rtf .button-green-dark {
  background-color: #005d1f;
}

.rtf .button-green {
  background-color: #47a742;
}

.rtf .button-green-light {
  background-color: #b0e768;
}

.rtf .button-transparent-border {
  background-color: transparent;
  box-shadow: inset 0 0 0 3px white;
}

.rtf .button-white-border {
  color: #0b0e10;
  background-color: white;
  box-shadow: inset 0 0 0 3px #0b0e10;
}

.rtf .link-with-arrow {
  display: inline-block;
  color: #47a742;
}

.rtf .link-with-arrow:after {
  display: inline-block;
  content: '';
  background: url(../img/icons/arrow-link.svg) 0 0 no-repeat;
  width: 5px;
  height: 9px;
  font-size: 20px;
  margin: 0 5px;
  vertical-align: middle;
}

.rtf hr {
  margin: 30px 0 30px 0;
  width: 57px;
  height: 2px;
  background-color: white;
  border: 0;
}

.img-responsive {
  max-width: 100%;
  max-height: 100%;
}

.shared-button {
  display: inline-block;
  position: relative;
  overflow: hidden;
  margin: 5px;
  line-height: 70px;
  min-height: 70px;
  min-width: 267px;
  text-align: center;
  background-clip: padding-box;
  box-shadow: inset 0 0 0 0px rgba(255, 255, 255, 0);
  box-sizing: border-box;
  color: white;
  font-family: 'Title', 'Title Fallback 1', 'Title Fallback 2', sans-serif;
  text-transform: uppercase;
  transition: background-color .5s, color .1s, box-shadow 0.4s, filter 0.4s;
}

@media screen and (max-width: 750px) {
  .shared-button {
    min-width: 100%;
    width: 100%;
  }
}

.shared-button:disabled, .shared-button:disabled::before {
  cursor: not-allowed;
  opacity: .6;
  filter: saturate(0);
}

.shared-button .multiplelines {
  box-sizing: border-box;
  display: block;
  line-height: 1;
  padding: 28px 30px;
  position: relative;
  z-index: 1;
  pointer-events: none;
}

.iOS.safari .shared-button .multiplelines {
  padding-top: 32px;
  padding-bottom: 24px;
}

.shared-button[modifiers*="size1"] {
  font-size: 14px;
}

.shared-button[modifiers*="size1"] .multiplelines {
  padding: 28px 30px;
}

.shared-button[modifiers*="size2"] {
  font-size: 18px;
}

.shared-button[modifiers*="size2"] .multiplelines {
  padding: 26px 30px;
}

.shared-button[modifiers*="size3"] {
  font-size: 22px;
}

.shared-button[modifiers*="size3"] .multiplelines {
  padding: 24px 30px;
}

.shared-button[modifiers*="color1"] {
  background-color: rgba(23, 28, 31, 0.8);
  box-shadow: inset 0 0 0 4px white;
}

.shared-button[modifiers*="color2"] {
  background-color: rgba(23, 28, 31, 0.8);
}

.shared-button[modifiers*="color3"] {
  background-color: #0b0e10;
}

.shared-button[modifiers*="color4"] {
  background-color: #005d1f;
}

.shared-button[modifiers*="color5"] {
  background-color: #47a742;
}

.shared-button[modifiers*="color6"] {
  background-color: #b0e768;
}

.shared-button[modifiers*="color7"] {
  background-color: transparent;
  box-shadow: inset 0 0 0 3px white;
}

.has-cursor .shared-button:before {
  display: block;
  content: '';
  background-image: url("/browser-resources/img/button-hover.png");
  background-position: center;
  background-repeat: no-repeat;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  transition: opacity 0.3s ease-out, background-size 0.3s ease-in;
  background-size: 0%;
  opacity: 0;
  z-index: 0;
}

.has-cursor .shared-button:hover:not(:disabled), .has-cursor .shared-button[state="active"] {
  color: #000000;
  background-color: white;
}

.has-cursor .shared-button:hover:not(:disabled):before, .has-cursor .shared-button[state="active"]:before {
  background-size: 115%;
  opacity: 1;
  transition: opacity 0.3s ease-in, background-size 0.3s ease-out;
}

@media screen and (max-width: 750px) {
  .shared-button.is-sticky {
    bottom: 0;
    left: 0;
    right: 0;
    margin: 0;
    font-size: 16px;
    line-height: 60px;
    min-height: 60px;
    height: auto;
    animation: delayedSlideInBottom 1.9s cubic-bezier(0.3, 0.8, 0.5, 1);
  }
  .shared-button.is-sticky.move-above-legal {
    bottom: 100px;
  }
  .shared-button.is-sticky:not(.positioned-over-footer) {
    margin-bottom: 0 !important;
  }
  .shared-button.is-sticky.positioned-over-footer {
    position: absolute !important;
  }
  .shared-button.is-sticky .multiplelines {
    padding-top: 22px;
    padding-bottom: 22px;
  }
}

a.shared-button {
  color: white;
}

.safari .button .multiplelines {
  margin: 28px 0 24px;
}

/* Raas button */
.shared-button.buy-now-button,
.shared-button {
  overflow: visible;
  -webkit-tap-highlight-color: rgba(255, 255, 255, 0);
  -webkit-focus-ring-color: rgba(255, 255, 255, 0);
  outline: none;
}

.shared-button.buy-now-button:hover,
.shared-button:hover {
  cursor: pointer;
}

.shared-button.buy-now-button:hover .slide-button-list,
.shared-button:hover .slide-button-list {
  opacity: 1;
  pointer-events: all;
}

.shared-button.buy-now-button:hover .slide-button-list .slide-button,
.shared-button:hover .slide-button-list .slide-button {
  transform: translateX(0);
}

.slide-button-list {
  overflow: hidden;
  position: absolute;
  left: 0;
  top: 73px;
  opacity: 0;
  pointer-events: none;
  width: 100%;
  top: 70px;
  padding-top: 1px;
}

.slide-button-list .slide-button {
  transition: background .12s, transform .3s;
  transform: translateX(-120%);
  margin-bottom: 1px;
  width: 100%;
  margin: 0 0 1px;
  height: 70px;
  line-height: 70px;
}

.slide-button-list .slide-button:nth-child(1) {
  transition-delay: 0.05s;
}

.slide-button-list .slide-button:nth-child(2) {
  transition-delay: 0.1s;
}

.slide-button-list .slide-button:nth-child(3) {
  transition-delay: 0.15s;
}

.slide-button-list .slide-button:nth-child(4) {
  transition-delay: 0.2s;
}

.slide-button-list .slide-button:nth-child(5) {
  transition-delay: 0.25s;
}

.slide-button-list .slide-button:nth-child(6) {
  transition-delay: 0.3s;
}

.slide-button-list .slide-button:nth-child(7) {
  transition-delay: 0.35s;
}

.slide-button-list .slide-button:nth-child(8) {
  transition-delay: 0.4s;
}

.slide-button-list .slide-button:nth-child(9) {
  transition-delay: 0.45s;
}

.slide-button {
  display: block;
  width: calc(100% - 10px);
  height: 60px;
  line-height: 60px;
  background: #101417;
  position: relative;
  margin: 0 5px 5px 5px;
  cursor: pointer;
  text-transform: uppercase;
  font-family: 'Title', 'Title Fallback 1', 'Title Fallback 2', sans-serif;
  transition: background-color .12s linear;
}

.slide-button a {
  display: block;
  height: 100%;
}

.slide-button__img, .slide-button__title {
  position: absolute;
  left: 50%;
  transition: all 0.22s cubic-bezier(0.5, 0, 0.5, 1);
}

.slide-button__title {
  color: white;
  transform: translateX(-50%);
  font-size: 18px;
}

.slide-button__img,
.slide-button .has-cursor .navigation-tiles .slide-button__img {
  animation: none;
  height: auto;
  transform: translate3d(-250px, -50%, 0);
  top: 50%;
  max-width: 28px;
  filter: grayscale(100%);
}

@media screen and (min-width: 450px) {
  .slide-button__img,
  .slide-button .has-cursor .navigation-tiles .slide-button__img {
    transform: translate3d(-400px, -50%, 0);
  }
}

@media screen and (min-width: 570px) {
  .slide-button__img,
  .slide-button .has-cursor .navigation-tiles .slide-button__img {
    transform: translate3d(-450px, -50%, 0);
  }
}

@media screen and (min-width: 650px) {
  .slide-button__img,
  .slide-button .has-cursor .navigation-tiles .slide-button__img {
    transform: translate3d(-600px, -50%, 0);
  }
}

@media screen and (min-width: 751px) {
  .slide-button__img,
  .slide-button .has-cursor .navigation-tiles .slide-button__img {
    transform: translate3d(-250px, -50%, 0);
  }
}

.slide-button:hover {
  background: #47a742;
}

.slide-button:hover .slide-button__title {
  transform: translateX(250px);
}

@media screen and (min-width: 450px) {
  .slide-button:hover .slide-button__title {
    transform: translateX(400px);
  }
}

@media screen and (min-width: 570px) {
  .slide-button:hover .slide-button__title {
    transform: translateX(450px);
  }
}

@media screen and (min-width: 650px) {
  .slide-button:hover .slide-button__title {
    transform: translateX(600px);
  }
}

@media screen and (min-width: 751px) {
  .slide-button:hover .slide-button__title {
    transform: translateX(250px);
  }
}

.slide-button:hover .slide-button__img {
  transform: translate3d(-50%, -50%, 0);
  transition-delay: .05s;
}

body {
  background-color: #141a1e;
}

.viewport {
  z-index: 2;
  position: relative;
  box-sizing: border-box;
  min-height: 100vh;
  width: 100%;
  max-width: 100vw;
  padding: 0;
  border: 0 solid transparent;
  margin: 0 auto;
  opacity: 1;
  transition: opacity 0.5s linear;
}

.viewport > .container {
  margin-left: auto;
  margin-right: auto;
  max-width: 100%;
  position: relative;
  z-index: 3;
}

.viewport > .container:nth-child(1) {
  z-index: 12;
}

.viewport > .container:nth-child(2) {
  z-index: 11;
}

.viewport > .container:nth-child(3) {
  z-index: 10;
}

.viewport > .container:nth-child(4) {
  z-index: 9;
}

.viewport > .container:nth-child(5) {
  z-index: 8;
}

.viewport > .container:nth-child(6) {
  z-index: 7;
}

.viewport > .container:nth-child(7) {
  z-index: 6;
}

.viewport > .container:nth-child(8) {
  z-index: 5;
}

.viewport > .container:nth-child(9) {
  z-index: 4;
}

.viewport > .container:nth-child(10) {
  z-index: 3;
}

.viewport > .background.container {
  z-index: 2;
}

.loading .viewport {
  visibility: collapse;
  opacity: 0;
  transition: opacity 1s linear;
}

.viewport[state~="pushed-down"]:before {
  content: ' ';
  display: block;
  padding-top: 90px;
}

@media screen and (max-width: 750px) {
  .viewport[state~="pushed-down"]:before {
    padding-top: 110px;
  }
}

.viewport[state~="pushed-down-extra"]:before {
  content: ' ';
  display: block;
  padding-top: 156px;
}

.viewport[state*="pushed-right"] {
  border-left-width: 228px;
}

.viewport[state*="pushed-right pushed-down-less"] {
  border-left-width: 228px;
}

.viewport[state*="pushed-right pushed-down-less"]:before {
  content: ' ';
  display: block;
  padding-top: 66px;
}

.viewport[state*="pushed-left"] {
  opacity: 0.2;
}

.viewport[state*="pushed-up"] {
  border-bottom-width: 240px;
}

.viewport[variant="stage"] {
  z-index: 1;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  opacity: 0;
}

.viewport[variant="stage"][state="active"] {
  opacity: 1;
}

.viewport[variant="size"] {
  z-index: 1;
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
  height: 100vh;
}

.viewport[variant="live"] {
  z-index: 2;
  position: relative;
}

.viewport[variant*='overlay'] {
  display: none;
}

.viewport[variant*='overlay'][state*='active'] {
  display: block;
  z-index: 3;
}

[building-page] .viewport > *:not(.background):not(.hero),
[building-page] .viewport .hero .content {
  opacity: 0;
}

.nav.unit {
  position: fixed;
  z-index: 8;
}

.nav.unit::-webkit-scrollbar {
  width: 12px;
}

.nav.unit .carousel-slide {
  float: left;
}

.nav.unit .bar {
  position: relative;
}

.nav.unit .menu[variant*="vertical"] {
  list-style: none;
  text-transform: uppercase;
}

.nav.unit .menu[variant*="vertical"] a,
.nav.unit .menu[variant*="vertical"] div {
  transition: .5s;
}

.nav.unit .menu[variant*="vertical"] > li {
  font-size: 16px;
  font-family: 'Title', 'Title Fallback 1', 'Title Fallback 2', sans-serif;
  color: #9898ab;
}

.nav.unit .menu[variant*="vertical"] > li > a,
.nav.unit .menu[variant*="vertical"] > li > div {
  display: block;
  line-height: 24px;
  padding: 22px 10px;
  letter-spacing: -0.2px;
  text-align: center;
  cursor: pointer;
}

.has-cursor .nav.unit .menu[variant*="vertical"] > li > a:hover,
.has-cursor .nav.unit .menu[variant*="vertical"] > li > div:hover,
.nav.unit .menu[variant*="vertical"] > li[state*="active"] > a,
.nav.unit .menu[variant*="vertical"] > li[state*="active"] > div {
  background: #14181c;
  color: white;
}

.nav.unit .menu[variant*="horizontal"] {
  z-index: 2;
  list-style: none;
  display: block;
  white-space: nowrap;
  text-align: center;
  height: 66px;
  overflow: hidden;
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
}

.nav.unit .menu[variant*="horizontal"] > li {
  height: 100%;
  display: inline-block;
  box-sizing: border-box;
  margin: 0 -3px;
  line-height: 66px;
}

.has-cursor .nav.unit .menu[variant*="horizontal"] > li:hover, .nav.unit .menu[variant*="horizontal"] > li[state="active"] {
  background: #171d21;
}

.has-cursor .nav.unit .menu[variant*="horizontal"] > li:hover > a, .nav.unit .menu[variant*="horizontal"] > li[state="active"] > a {
  color: white;
}

.nav.unit .menu[variant*="horizontal"] > li > a {
  display: inline-block;
  padding: 5px 28px;
  line-height: 19px;
  text-transform: uppercase;
  font-family: 'Title', 'Title Fallback 1', 'Title Fallback 2', sans-serif;
  color: #9898ab;
  font-size: 16px;
}

.nav.unit .menu .menu.menu {
  overflow: hidden;
}

.nav.unit .menu .menu.menu,
.nav.unit .menu .menu > li, .nav.unit .menu .menu > li > a {
  background-color: #1c2125;
  font-family: 'Subtitle', 'Default Fallback', sans-serif;
  line-height: 20px;
  letter-spacing: 0;
  margin-top: 0;
  transition: max-height 0.9s cubic-bezier(0, 1, 0.5, 1);
}

.nav.unit .menu .menu > li > a {
  display: block;
  text-align: center;
  padding: 11px 10px;
}

.nav.unit .menu .menu > li:first-child a {
  padding-top: 22px;
}

.nav.unit .menu .menu > li:last-child a {
  padding-bottom: 22px;
}

.nav.unit .menu .menu > li[state*="active"] > a, .nav.unit .menu .menu > li a:hover {
  color: white;
}

.nav.unit .menu li[state*="active"] > .menu {
  max-height: 800px;
}

.nav.unit .menu li:not([state*="active"]) > .menu {
  max-height: 0 !important;
}

.nav.unit .menu li > * > .icon {
  display: inline-block;
  margin-right: 7px;
  width: auto;
  height: 24px;
}

@media screen and (max-width: 750px) {
  .nav.unit .menu li > * > .icon {
    margin: -4px 0 0 7px;
  }
}

.nav.unit .follow {
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
  -moz-align-items: center;
  align-items: center;
  -ms-flex-pack: center;
  -moz-justify-content: center;
  justify-content: center;
  text-align: center;
}

.nav.unit .follow span[variant*="hidden"] {
  display: none;
  font-size: 17px;
  font-family: 'Title', 'Title Fallback 1', 'Title Fallback 2', sans-serif;
  color: white;
  padding: 5px;
  text-align: center;
  text-transform: uppercase;
}

.nav.unit .follow a svg.icon .text {
  fill: #6c6e7b;
}

.has-cursor .nav.unit .follow a svg.icon:hover .text {
  fill: white;
}

.has-cursor .nav.unit .follow a svg.icon:hover .background {
  fill: #14181c;
}

.nav[variant*="side"] {
  top: 0;
  bottom: 0;
  left: 0;
  width: 228px;
  background-color: #101417;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -moz-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -ms-flex-align: start;
  -moz-align-items: flex-start;
  align-items: flex-start;
  -ms-flex-pack: center;
  -moz-justify-content: center;
  justify-content: center;
  overflow: hidden;
  -webkit-overflow-scrolling: touch;
  transition: transform 0.9s cubic-bezier(0, 1, 0.5, 1);
  transform: translateX(-228px);
}

.nav[variant*="side"][state="active"] {
  transform: translateX(0);
  overflow: auto;
}

.nav[variant*="side"] .logo {
  -ms-flex-item-align: start;
  align-self: flex-start;
  display: block;
  padding: 25px 0 25px 0;
  text-align: center;
  background-color: transparent;
}

.nav[variant*="side"] .logo img {
  width: 98px;
  height: 70px;
  display: inline-block;
}

.nav[variant*="side"] .top {
  -ms-flex-item-align: start;
  align-self: flex-start;
  width: 100%;
}

.nav[variant*="side"] .bottom {
  width: 100%;
  -ms-flex-item-align: end;
  align-self: flex-end;
}

.nav[variant*="side"] .follow {
  width: 100%;
  padding: 26px 0;
}

.nav[variant*="side"] .menu[variant*="vertical"] {
  margin-top: 15px;
}

.nav[variant*="side"] .menu[variant*="vertical"] .menu {
  transition-delay: .4s;
  transition-duration: 1.35s;
}

@media screen and (max-width: 750px) {
  .nav[variant*="mobile"] {
    top: 0;
    right: 0;
    bottom: 0;
    width: 80%;
    background-color: #0b0e10;
    transform: translateX(101%);
    z-index: 15;
    overflow: hidden;
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
    transition: transform 0.9s cubic-bezier(0, 1, 0.5, 1);
  }
  .old-android .nav[variant*="mobile"] {
    display: none;
  }
  .lt-ie10 .nav[variant*="mobile"] {
    right: -80%;
  }
}

@media screen and (min-width: 751px) {
  .nav[variant*="mobile"] {
    display: none;
  }
}

.not-android .nav[variant*="mobile"] .carousel,
.new-android .nav[variant*="mobile"] .carousel {
  margin: 30px 15px 0 15px;
}

.not-android .nav[variant*="mobile"] .carousel .carousel-unit .content h2,
.new-android .nav[variant*="mobile"] .carousel .carousel-unit .content h2 {
  font-family: 'Title', 'Title Fallback 1', 'Title Fallback 2', sans-serif;
  text-transform: uppercase;
}

.not-android .nav[variant*="mobile"] .carousel .carousel-dots,
.new-android .nav[variant*="mobile"] .carousel .carousel-dots {
  padding-bottom: 30px;
}

.old-android .nav[variant*="mobile"] .carousel {
  display: none !important;
}

.nav[variant*="mobile"] .follow {
  -ms-flex-pack: start;
  -moz-justify-content: flex-start;
  justify-content: flex-start;
  padding: 56px 13px;
}

.not-android .nav[variant*="mobile"][state="active"],
.new-android .nav[variant*="mobile"][state="active"] {
  transform: translateX(0);
}

.old-android .nav[variant*="mobile"][state="active"] {
  display: block;
}

.lt-ie10 .nav[variant*="mobile"][state="active"] {
  right: -0%;
}

.nav[variant*="mobile"] .menu[variant*="vertical"] > li > a,
.nav[variant*="mobile"] .menu[variant*="vertical"] > li > div {
  padding-left: 23px;
  padding-right: 23px;
  text-align: left;
}

.nav[variant*="mobile"] .menu[variant*="vertical"] > li .menu {
  font-size: 16px;
  transition-delay: 0s;
}

.nav[variant*="mobile"] .menu[variant*="vertical"] > li .menu [state="active"] a {
  background-color: #1c2125;
  color: white;
}

.nav[variant*="mobile"] .menu[variant*="vertical"] > li .menu a {
  padding-left: 46px;
  text-align: left;
}

.nav[variant*="top"] {
  position: fixed;
  top: -90px;
  right: 0;
  left: 0;
  width: 100%;
  background: transparent;
  transition: top 0.3s ease-out, opacity 0.5s linear 0.3s;
}

.nav[variant*="top"] .bar.main {
  height: 90px;
  background-color: transparent;
  transition: background-color 0.5s linear 0.3s;
}

.nav[variant*="top"] .logo {
  z-index: 9;
  position: absolute;
  left: 33px;
  top: 12px;
  bottom: 12px;
  transition: transform 0.9s cubic-bezier(0, 1, 0.5, 1), opacity 0.5s linear 0.3s;
}

.nav[variant*="top"] .logo img {
  height: 100%;
  width: 80px;
  float: left;
}

.nav[variant*="top"] .tool {
  z-index: 13;
  position: fixed;
  top: 18px;
  right: 23px;
  height: 55px;
  visibility: collapse;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
  -moz-align-items: center;
  align-items: center;
  -ms-flex-pack: center;
  -moz-justify-content: center;
  justify-content: center;
  -webkit-backface-visibility: hidden;
}

@media screen and (min-width: 751px) {
  .nav[variant*="top"] .tool .arrow {
    opacity: 1;
  }
}

@media screen and (max-width: 750px) {
  .nav[variant*="top"] .tool .bars {
    opacity: 1;
  }
}

.has-cursor .nav[variant*="top"] .tool:hover .background {
  fill: white;
}

.has-cursor .nav[variant*="top"] .tool:hover .text {
  fill: #0b0e10;
}

.nav[variant*="top"] .title {
  margin: 0 125px;
  overflow: auto;
  height: 100%;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
  -moz-align-items: center;
  align-items: center;
  -ms-flex-pack: center;
  -moz-justify-content: center;
  justify-content: center;
  transition: transform 0.9s cubic-bezier(0, 1, 0.5, 1), opacity 0.5s linear 0.3s;
  font-family: 'Title', 'Title Fallback 1', 'Title Fallback 2', sans-serif;
  font-size: 20px;
  text-transform: uppercase;
  text-align: center;
}

.nav[variant*="top"] .title span {
  color: #cfcfdb;
  line-height: 26px;
  display: inline-block;
  letter-spacing: 0.3px;
}

@media screen and (max-width: 750px) {
  .nav[variant*="top"] .title {
    display: none;
  }
}

.nav[variant*="top"][state*="active"] {
  top: 0 !important;
  background: #0b0e10;
  transition: top 0.3s ease-out, opacity 0.5s linear 0.3s;
}

.nav[variant*="top"][state*="active"] .tool {
  visibility: visible;
}

.nav[variant*="top"][state*="active"] .bar.main {
  background-color: #101417;
}

.nav[variant*="top"][state*="up"][state*="active"], .nav[variant*="top"][state*="down"][state*="active"] {
  top: -90px !important;
}

@media screen and (min-width: 751px) {
  .nav[variant="sub"],
  .nav[variant*="top"][variant*="sub"] {
    top: -156px;
  }
  .nav[variant="sub"] .bar.secondary,
  .nav[variant*="top"][variant*="sub"] .bar.secondary {
    z-index: 11;
    height: 66px;
    line-height: 66px;
    top: 0;
    background: #14181c;
    transition: top 0.3s cubic-bezier(0, 1, 0.5, 1), height 0.3s cubic-bezier(0, 1, 0.5, 1), line-height 0.3s cubic-bezier(0, 1, 0.5, 1), transform 0.9s cubic-bezier(0, 1, 0.5, 1), opacity 0.5s linear 0.3s;
  }
  .nav[variant="sub"] .menu[variant*="horizontal"],
  .nav[variant*="top"][variant*="sub"] .menu[variant*="horizontal"] {
    z-index: 2;
    height: 100%;
    width: 100%;
    position: absolute;
    left: 0;
    top: 0;
  }
  .nav[variant="sub"] .menu[variant*="horizontal"] li,
  .nav[variant*="top"][variant*="sub"] .menu[variant*="horizontal"] li {
    transition: line-height 0.3s cubic-bezier(0, 1, 0.5, 1), height 0.3s cubic-bezier(0, 1, 0.5, 1);
    transition: background .5s;
  }
  .nav[variant="sub"] .menu[variant*="horizontal"] a,
  .nav[variant*="top"][variant*="sub"] .menu[variant*="horizontal"] a {
    transition: font-size 0.3s cubic-bezier(0, 1, 0.5, 1);
    transition: color .5s;
  }
  .nav[variant="sub"][state*="down"][state*="active"],
  .nav[variant*="top"][variant*="sub"][state*="down"][state*="active"] {
    top: -90px;
    height: 90px;
  }
  .nav[variant="sub"][state*="down"][state*="active"] .bar.secondary,
  .nav[variant*="top"][variant*="sub"][state*="down"][state*="active"] .bar.secondary {
    top: -90px;
  }
  .nav[variant="sub"][state*="down"][state*="active"] .menu[variant*="horizontal"] li,
  .nav[variant*="top"][variant*="sub"][state*="down"][state*="active"] .menu[variant*="horizontal"] li {
    line-height: 90px;
  }
  .nav[variant="sub"][state*="up"][state*="active"],
  .nav[variant*="top"][variant*="sub"][state*="up"][state*="active"] {
    height: 90px;
  }
  .nav[variant="sub"][state*="up"][state*="active"] .bar.secondary,
  .nav[variant*="top"][variant*="sub"][state*="up"][state*="active"] .bar.secondary {
    height: 90px;
    line-height: 90px;
  }
  .nav[variant="sub"][state*="up"][state*="active"] .menu[variant*="horizontal"],
  .nav[variant*="top"][variant*="sub"][state*="up"][state*="active"] .menu[variant*="horizontal"] {
    width: 100%;
  }
  .nav[variant="sub"][state*="up"][state*="active"] .menu[variant*="horizontal"] li,
  .nav[variant*="top"][variant*="sub"][state*="up"][state*="active"] .menu[variant*="horizontal"] li {
    line-height: 90px;
  }
  .nav[variant="sub"] {
    top: 0;
    width: 100%;
    box-sizing: border-box;
    padding-left: 228px;
    background-color: #101417;
    transition: transform 0.9s cubic-bezier(0, 1, 0.5, 1);
    transition-delay: 0s;
    transform: translateY(-66px);
  }
  .nav[variant="sub"][state="active"] {
    transition-delay: .75s;
    transform: translateY(0);
  }
  .nav[variant="sub"] .bar {
    overflow-x: auto;
    overflow-y: hidden;
    text-align: center;
  }
}

@media screen and (min-width: 751px) and (max-width: 1024px) {
  .nav[variant="sub"] .menu[variant*="horizontal"] > li > a {
    padding: 5px 16px;
  }
}

@media screen and (max-width: 750px) {
  .nav[variant*="top"][variant*="sub"] .bar.secondary {
    display: none;
  }
  .nav[variant="sub"] {
    display: none;
  }
}

.nav[variant*="top"][variant*="modal"] .tool .bars {
  opacity: 0;
}

.nav[variant*="top"][variant*="modal"] .tool .arrow {
  opacity: 0;
}

.nav[variant*="top"][variant*="modal"] .tool .cross {
  opacity: 1;
}

@media screen and (max-width: 750px) {
  .nav[variant*="top"][variant*="logo"] .logo {
    display: block;
  }
}

.nav[variant*="top"][variant*="logo"] .title {
  display: none;
}

.nav[variant*="mobile"][state*="active"] ~ .nav[variant*="top"] .bar.main {
  background-color: rgba(0, 0, 0, 0.3);
}

.nav[variant*="mobile"][state*="active"] ~ .nav[variant*="top"] .bar.secondary {
  opacity: 0.2;
  transform: translateX(-80%);
}

.nav[variant*="mobile"][state*="active"] ~ .nav[variant*="top"] .logo,
.nav[variant*="mobile"][state*="active"] ~ .nav[variant*="top"] .title {
  opacity: 0.2;
  transform: translateX(-600px);
}

.nav[variant*="mobile"][state*="active"] ~ .nav[variant*="top"] .tool {
  right: 81%;
  margin: 0 10px;
  max-width: calc(20% - 20px);
}

.nav[variant*="mobile"][state*="active"] ~ .nav[variant*="top"] .tool .bars {
  opacity: 0;
}

.nav[variant*="mobile"][state*="active"] ~ .nav[variant*="top"] .tool .cross {
  opacity: 1;
}

.hero .play {
  width: 95px;
  height: 95px;
  border-radius: 50%;
  margin: 18px;
  transition: background-color .8s, color .1s, box-shadow 0.4s;
  display: inline-block;
  line-height: 95px;
  text-align: center;
  background-clip: padding-box;
  box-shadow: inset 0 0 0 0px rgba(255, 255, 255, 0);
}

.hero .play svg {
  display: inline-block;
  vertical-align: middle;
  margin-right: -4px;
  margin-top: -4px;
}

.hero .play .text {
  fill: white;
}

.hero .play[variant*="color1"] {
  background-color: rgba(23, 28, 31, 0.8);
  box-shadow: inset 0 0 0 4px white;
}

.hero .play[variant*="color2"] {
  background-color: rgba(23, 28, 31, 0.8);
}

.hero .play[variant*="color3"] {
  background-color: #0b0e10;
}

.hero .play[variant*="color4"] {
  background-color: #005d1f;
}

.hero .play[variant*="color5"] {
  background-color: #47a742;
}

.hero .play[variant*="color6"] {
  background-color: #b0e768;
}

.hero .play[variant*="color7"] {
  background-color: transparent;
  box-shadow: inset 0 0 0 4px white;
}

.hero .play:hover, .hero .play[state="active"] {
  box-shadow: inset 0 0 0 8px white;
  background-color: white;
  color: #000000;
}

.hero .play:hover .text, .hero .play[state="active"] .text {
  fill: #000000;
}

.hero .title {
  color: white;
  font-family: 'Title', 'Title Fallback 1', 'Title Fallback 2', sans-serif;
  text-transform: uppercase;
  line-height: 1em;
  min-height: 1em;
  margin: 0;
  padding: 0;
  font-size: 26px;
  display: block;
  max-height: 100%;
  max-width: 100%;
  -ms-flex-negative: 0;
      flex-shrink: 0;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  transform: translate3d(0, 0, 0);
}

@media screen and (max-width: 750px) {
  .hero .title[variant*="size1"] {
    font-size: 45px;
  }
  .hero .title[variant*="size2"] {
    font-size: 37px;
  }
  .hero .title[variant*="size3"] {
    font-size: 35px;
  }
  .hero .title[variant*="size4"] {
    font-size: 20px;
  }
}

@media screen and (min-width: 751px) {
  .hero .title[variant*="size1"] {
    font-size: 60px;
  }
  .hero .title[variant*="size2"] {
    font-size: 43px;
  }
  .hero .title[variant*="size3"] {
    font-size: 35px;
  }
  .hero .title[variant*="size4"] {
    font-size: 20px;
  }
}

@media screen and (min-width: 1024px) {
  .hero .title[variant*="size1"] {
    font-size: 70px;
  }
  .hero .title[variant*="size2"] {
    font-size: 53px;
  }
  .hero .title[variant*="size3"] {
    font-size: 35px;
  }
  .hero .title[variant*="size4"] {
    font-size: 20px;
  }
}

@media screen and (min-width: 1280px) {
  .hero .title[variant*="size1"] {
    font-size: 80px;
  }
  .hero .title[variant*="size2"] {
    font-size: 63px;
  }
  .hero .title[variant*="size3"] {
    font-size: 45px;
  }
  .hero .title[variant*="size4"] {
    font-size: 30px;
  }
}

.hero .title[variant*="color1"] {
  color: #005d1f;
}

.hero .title[variant*="color2"] {
  color: #47a742;
}

.hero .title[variant*="color3"] {
  color: #b0e768;
}

.hero .title[variant*="color4"] {
  color: #ffffff;
}

.hero .title[variant*="color5"] {
  color: #171c1f;
}

.hero .title[variant*="color6"] {
  color: #6c6e7b;
}

.hero .shared-button {
  margin-top: 30px;
  margin-bottom: 10px;
}

.hero__logo {
  display: block;
  transform: scale(0.5);
  height: auto;
}

.hero__logo + .hero__logo {
  margin-top: 0;
}

@media screen and (min-width: 751px) {
  .hero__logo {
    transform: scale(1);
  }
  .hero__logo + .hero__logo {
    margin-top: 20px;
  }
}

@media screen and (min-width: 751px) and (max-width: 1280px) {
  [state*="pushed-right"] .hero__logo {
    transform: scale(0.75);
  }
  [state*="pushed-right"] .hero__logo + [state*="pushed-right"] .hero__logo {
    margin-top: 5px;
  }
}

[variant*="tl"] .hero__logo {
  transform-origin: left top;
}

[variant*="tc"] .hero__logo {
  transform-origin: center top;
}

[variant*="tr"] .hero__logo {
  transform-origin: right top;
}

[variant*="cl"] .hero__logo {
  transform-origin: left center;
}

[variant*="cc"] .hero__logo {
  transform-origin: center center;
}

[variant*="cr"] .hero__logo {
  transform-origin: right center;
}

[variant*="bl"] .hero__logo {
  transform-origin: left bottom;
}

[variant*="bc"] .hero__logo {
  transform-origin: center bottom;
}

[variant*="br"] .hero__logo {
  transform-origin: right bottom;
}

.hero[variant="default"] .content {
  position: absolute;
  z-index: 5;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  overflow: visible;
  opacity: 1;
  transform: translate(0, 0) translate3d(0, 0, 0);
}

.hero[variant="default"] .background {
  position: fixed;
  z-index: 1;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  transition: opacity 1s linear;
}

.hero[variant="default"] .background _::-webkit-full-page-media, .hero[variant="default"] .background _:future, :root .hero[variant="default"] .background {
  height: 112vh;
}

.hero[variant="default"] .background embed,
.hero[variant="default"] .background object,
.hero[variant="default"] .background iframe,
.hero[variant="default"] .background video,
.hero[variant="default"] .background img {
  border: 0 none;
  min-width: 100%;
  min-height: 100%;
  height: auto;
  object-fit: cover;
  transform-origin: center top;
  transform: translate(0, 0);
  transition: opacity 0.5s linear 0.3s;
  border: 0 none;
  outline: 0 none;
}

.hero[variant="default"] .background .video_ratio {
  position: relative;
  min-width: 100%;
  min-height: 100%;
}

@media screen and (min-width: 750px) {
  .hero[variant="default"] .background .video_ratio {
    width: 178vh;
  }
}

.hero[variant="default"] .background .video_ratio:before {
  content: '';
  display: block;
  position: relative;
  padding-top: 56.25%;
}

.hero[variant="default"] .background .video_ratio img,
.hero[variant="default"] .background .video_ratio video,
.hero[variant="default"] .background .video_ratio embed,
.hero[variant="default"] .background .video_ratio object,
.hero[variant="default"] .background .video_ratio video,
.hero[variant="default"] .background .video_ratio iframe {
  position: absolute;
  width: 100%;
  height: 100%;
  object-fit: cover;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.hero[variant="default"] .background .image_ratio {
  position: relative;
  min-height: 100%;
  min-width: 100%;
  max-height: 100%;
  max-height: 100vh;
  width: 100vw;
  height: 100vh;
}

.hero[variant="default"] .background .image_ratio img,
.hero[variant="default"] .background .image_ratio video,
.hero[variant="default"] .background .image_ratio embed,
.hero[variant="default"] .background .image_ratio object,
.hero[variant="default"] .background .image_ratio video,
.hero[variant="default"] .background .image_ratio iframe {
  width: 100%;
  height: auto;
  /* FIX for IE */
}

@media screen and (max-width: 750px) {
  .hero[variant="default"] .background .image_ratio img,
  .hero[variant="default"] .background .image_ratio video,
  .hero[variant="default"] .background .image_ratio embed,
  .hero[variant="default"] .background .image_ratio object,
  .hero[variant="default"] .background .image_ratio video,
  .hero[variant="default"] .background .image_ratio iframe {
    max-width: none;
    max-height: 100%;
  }
}

@media screen and (max-width: 750px) and (-ms-high-contrast: none) {
  .hero[variant="default"] .background .image_ratio img,
  .hero[variant="default"] .background .image_ratio video,
  .hero[variant="default"] .background .image_ratio embed,
  .hero[variant="default"] .background .image_ratio object,
  .hero[variant="default"] .background .image_ratio video,
  .hero[variant="default"] .background .image_ratio iframe {
    width: auto;
    height: 100%;
  }
}

@media screen and (min-width: 750px) and (-ms-high-contrast: none) {
  .hero[variant="default"] .background .image_ratio img,
  .hero[variant="default"] .background .image_ratio video,
  .hero[variant="default"] .background .image_ratio embed,
  .hero[variant="default"] .background .image_ratio object,
  .hero[variant="default"] .background .image_ratio video,
  .hero[variant="default"] .background .image_ratio iframe {
    width: 100%;
    height: auto;
  }
}

.hero[variant="default"] .background * {
  pointer-events: none !important;
}

.hero[variant="default"] .background.regular, .hero[variant="default"] .background.blurred {
  z-index: 2;
  opacity: 0;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -moz-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -ms-flex-align: center;
  -moz-align-items: center;
  align-items: center;
  -ms-flex-pack: center;
  -moz-justify-content: center;
  justify-content: center;
}

@media screen and (min-aspect-ratio: 1 / 1) {
  .hero[variant="default"] .background.regular, .hero[variant="default"] .background.blurred {
    -moz-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

.hero[variant="default"] .background.regular[state*="active"], .hero[variant="default"] .background.blurred[state*="active"] {
  opacity: 1;
}

.hero[variant="default"] .background.video {
  z-index: 2;
  opacity: 0;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -moz-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -ms-flex-align: center;
  -moz-align-items: center;
  align-items: center;
  -ms-flex-pack: center;
  -moz-justify-content: center;
  justify-content: center;
}

@media screen and (min-aspect-ratio: 16 / 9) {
  .hero[variant="default"] .background.video {
    -moz-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

.hero[variant="default"] .background.video[state*="active"] {
  opacity: 1;
}

.hero[variant="default"] .background.blurred {
  z-index: 3;
  opacity: 0;
}

.hero[variant="default"] .placeholder {
  position: absolute;
  z-index: 4;
  top: 20px;
  left: 20px;
  bottom: 0;
  right: 20px;
  overflow: visible;
  pointer-events: none;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -moz-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -ms-flex-align: center;
  -moz-align-items: center;
  align-items: center;
  -ms-flex-pack: center;
  -moz-justify-content: center;
  justify-content: center;
}

.hero[variant="default"] .placeholder[variant="tl"] {
  text-align: left;
  -ms-flex-align: start;
  -moz-align-items: flex-start;
  align-items: flex-start;
  -ms-flex-pack: start;
  -moz-justify-content: flex-start;
  justify-content: flex-start;
}

.hero[variant="default"] .placeholder[variant="tc"] {
  text-align: center;
  -ms-flex-align: center;
  -moz-align-items: center;
  align-items: center;
  -ms-flex-pack: start;
  -moz-justify-content: flex-start;
  justify-content: flex-start;
}

.hero[variant="default"] .placeholder[variant="tr"] {
  text-align: right;
  -ms-flex-align: end;
  -moz-align-items: flex-end;
  align-items: flex-end;
  -ms-flex-pack: start;
  -moz-justify-content: flex-start;
  justify-content: flex-start;
}

.hero[variant="default"] .placeholder[variant="cl"] {
  text-align: left;
  -ms-flex-align: start;
  -moz-align-items: flex-start;
  align-items: flex-start;
  -ms-flex-pack: center;
  -moz-justify-content: center;
  justify-content: center;
}

.hero[variant="default"] .placeholder[variant="cc"] {
  text-align: center;
  -ms-flex-align: center;
  -moz-align-items: center;
  align-items: center;
  -ms-flex-pack: center;
  -moz-justify-content: center;
  justify-content: center;
}

.hero[variant="default"] .placeholder[variant="cr"] {
  text-align: right;
  -ms-flex-align: end;
  -moz-align-items: flex-end;
  align-items: flex-end;
  -ms-flex-pack: center;
  -moz-justify-content: center;
  justify-content: center;
}

.hero[variant="default"] .placeholder[variant="bl"] {
  text-align: left;
  -ms-flex-align: start;
  -moz-align-items: flex-start;
  align-items: flex-start;
  -ms-flex-pack: end;
  -moz-justify-content: flex-end;
  justify-content: flex-end;
}

.hero[variant="default"] .placeholder[variant="bc"] {
  text-align: center;
  -ms-flex-align: center;
  -moz-align-items: center;
  align-items: center;
  -ms-flex-pack: end;
  -moz-justify-content: flex-end;
  justify-content: flex-end;
}

.hero[variant="default"] .placeholder[variant="br"] {
  text-align: right;
  -ms-flex-align: end;
  -moz-align-items: flex-end;
  align-items: flex-end;
  -ms-flex-pack: end;
  -moz-justify-content: flex-end;
  justify-content: flex-end;
}

.hero[variant="default"] .placeholder > * {
  pointer-events: auto;
}

.lt-ie9 .hero[variant="default"] .placeholder > * {
  display: block;
  width: auto;
}

.hero[variant="editing"] .content {
  z-index: 2;
  position: relative;
  border: 1px solid white;
  width: 100%;
  height: 100%;
}

.hero[variant="editing"] .title {
  display: block;
}

.hero[variant="editing"] .title[variant*="size1"] {
  font-size: 45px !important;
}

.hero[variant="editing"] .title[variant*="size2"] {
  font-size: 37px !important;
}

.hero[variant="editing"] .title[variant*="size3"] {
  font-size: 35px !important;
}

.hero[variant="editing"] .title[variant*="size4"] {
  font-size: 20px !important;
}

.hero[variant="editing"] .placeholder {
  width: 33.333%;
  height: 33.333%;
  border: 1px dotted white;
  text-align: center;
  vertical-align: middle;
}

.hero[variant="editing"] .background {
  z-index: 1;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

.hero[variant="editing"] .background * {
  max-width: 100%;
  height: auto;
}

.hero[variant="editing"] .message {
  padding: 20px;
  margin: 15px 0;
  background: Tomato;
}

.hero[variant="editing"] .video {
  padding: 20px;
  margin: 15px 0;
  background: Silver;
}

.hero.container[variant="default"] {
  margin-top: 0;
  margin-bottom: 0;
  position: relative;
  z-index: 2;
}

.hero.container[variant="default"] > .unit {
  position: relative;
  width: 100%;
}

.hero.container[variant="default"] > .unit:before {
  content: "";
  display: block;
}

@media screen and (max-width: 750px) {
  .hero.container[variant="default"] > .unit:before {
    padding-top: 66.666vh;
  }
}

@media screen and (max-width: 480px) and (orientation: landscape) {
  .hero.container[variant="default"] > .unit:before {
    padding-top: 0;
    height: 150%;
    min-height: 550px;
  }
}

@media screen and (min-width: 480px) and (max-width: 750px) and (orientation: landscape) {
  .hero.container[variant="default"] > .unit:before {
    padding-top: 0;
    height: 120%;
    min-height: 450px;
  }
}

@media screen and (min-width: 751px) and (max-width: 1499px) {
  .hero.container[variant="default"] > .unit:before {
    padding-top: 80vh;
  }
}

@media screen and (min-width: 1500px) {
  .hero.container[variant="default"] > .unit:before {
    padding-top: 80vh;
  }
}

.hero.container[variant="default"][modifier*="medium"] > .unit {
  position: relative;
  width: 100%;
}

.hero.container[variant="default"][modifier*="medium"] > .unit:before {
  content: "";
  display: block;
}

@media screen and (max-width: 750px) {
  .hero.container[variant="default"][modifier*="medium"] > .unit:before {
    padding-top: 60vh;
  }
}

@media screen and (max-width: 480px) and (orientation: landscape) {
  .hero.container[variant="default"][modifier*="medium"] > .unit:before {
    padding-top: 0;
    height: 150%;
    min-height: 550px;
  }
}

@media screen and (min-width: 480px) and (max-width: 750px) and (orientation: landscape) {
  .hero.container[variant="default"][modifier*="medium"] > .unit:before {
    padding-top: 0;
    height: 120%;
    min-height: 450px;
  }
}

@media screen and (min-width: 751px) and (max-width: 1499px) {
  .hero.container[variant="default"][modifier*="medium"] > .unit:before {
    padding-top: 66.666vh;
  }
}

@media screen and (min-width: 1500px) {
  .hero.container[variant="default"][modifier*="medium"] > .unit:before {
    padding-top: 66.666vh;
  }
}

.hero.container[variant="default"][modifier*="small"] > .unit {
  position: relative;
  width: 100%;
}

.hero.container[variant="default"][modifier*="small"] > .unit:before {
  content: "";
  display: block;
}

@media screen and (max-width: 750px) {
  .hero.container[variant="default"][modifier*="small"] > .unit:before {
    padding-top: 40%;
  }
}

@media screen and (max-width: 480px) and (orientation: landscape) {
  .hero.container[variant="default"][modifier*="small"] > .unit:before {
    padding-top: 0;
    height: 75%;
    min-height: 225px;
  }
}

@media screen and (min-width: 480px) and (max-width: 750px) and (orientation: landscape) {
  .hero.container[variant="default"][modifier*="small"] > .unit:before {
    padding-top: 0;
    height: 60%;
    min-height: 225px;
  }
}

@media screen and (min-width: 751px) and (max-width: 1499px) {
  .hero.container[variant="default"][modifier*="small"] > .unit:before {
    padding-top: 40vh;
  }
}

@media screen and (min-width: 1500px) {
  .hero.container[variant="default"][modifier*="small"] > .unit:before {
    padding-top: 40vh;
  }
}

.hero.container[variant="default"][modifier*="extra-small"] > .unit {
  position: relative;
  width: 100%;
}

.hero.container[variant="default"][modifier*="extra-small"] > .unit:before {
  content: "";
  display: block;
}

@media screen and (max-width: 750px) {
  .hero.container[variant="default"][modifier*="extra-small"] > .unit:before {
    padding-top: 20%;
  }
}

@media screen and (max-width: 480px) and (orientation: landscape) {
  .hero.container[variant="default"][modifier*="extra-small"] > .unit:before {
    padding-top: 0;
    height: 37%;
    min-height: 225px;
  }
}

@media screen and (min-width: 480px) and (max-width: 750px) and (orientation: landscape) {
  .hero.container[variant="default"][modifier*="extra-small"] > .unit:before {
    padding-top: 0;
    height: 30%;
    min-height: 225px;
  }
}

@media screen and (min-width: 751px) and (max-width: 1499px) {
  .hero.container[variant="default"][modifier*="extra-small"] > .unit:before {
    padding-top: 20vh;
  }
}

@media screen and (min-width: 1500px) {
  .hero.container[variant="default"][modifier*="extra-small"] > .unit:before {
    padding-top: 20vh;
  }
}

.hero.container[variant="editing"] {
  position: relative;
  width: 960px;
  margin: 0 auto;
}

.hero.container[variant="editing"] > .unit {
  position: relative;
  width: 960px;
  height: 540px;
  max-width: 100%;
}

.hero[modifier*="dimmed"] .blurred:after {
  opacity: 1;
  transform: translateY(0);
}

.hero .blurred:after {
  z-index: 3;
  position: absolute;
  right: 0;
  bottom: 0;
  left: 0;
  content: "";
  background: linear-gradient(to bottom, transparent, #171c1f);
  height: 350px;
  opacity: 0;
  transform: translateY(150px);
  transition: transform 1s, opacity 1s;
}

@media screen and (max-width: 750px) {
  .viewport[state="pushed-down-extra"] .container[variant="default"] > .unit:before {
    padding-top: 60vh;
  }
}

@media screen and (min-width: 751px) and (max-width: 1499px) {
  .viewport[state="pushed-down-extra"] .container[variant="default"] > .unit:before {
    padding-top: 68vh;
  }
}

@media screen and (min-width: 1500px) {
  .viewport[state="pushed-down-extra"] .container[variant="default"] > .unit:before {
    padding-top: 75vh;
  }
}

@media screen and (max-width: 750px) {
  .viewport[state="pushed-down-extra"] .container[variant="default"][modifier*="medium"] > .unit:before {
    padding-top: 50vh;
  }
}

@media screen and (min-width: 751px) and (max-width: 1499px) {
  .viewport[state="pushed-down-extra"] .container[variant="default"][modifier*="medium"] > .unit:before {
    padding-top: 55vh;
  }
}

@media screen and (min-width: 1500px) {
  .viewport[state="pushed-down-extra"] .container[variant="default"][modifier*="medium"] > .unit:before {
    padding-top: 60vh;
  }
}

@media screen and (max-width: 750px) {
  .viewport[state="pushed-down-extra"] .container[variant="default"][modifier*="small"] > .unit:before {
    padding-top: 30vh;
  }
}

@media screen and (min-width: 751px) and (max-width: 1499px) {
  .viewport[state="pushed-down-extra"] .container[variant="default"][modifier*="small"] > .unit:before {
    padding-top: 34vh;
  }
}

@media screen and (min-width: 1500px) {
  .viewport[state="pushed-down-extra"] .container[variant="default"][modifier*="small"] > .unit:before {
    padding-top: 37vh;
  }
}

@media screen and (max-width: 750px) {
  .viewport[state="pushed-down-extra"] .container[variant="default"][modifier*="extra-small"] > .unit:before {
    padding-top: 15vh;
  }
}

@media screen and (min-width: 751px) and (max-width: 1499px) {
  .viewport[state="pushed-down-extra"] .container[variant="default"][modifier*="extra-small"] > .unit:before {
    padding-top: 17vh;
  }
}

@media screen and (min-width: 1500px) {
  .viewport[state="pushed-down-extra"] .container[variant="default"][modifier*="extra-small"] > .unit:before {
    padding-top: 18vh;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
