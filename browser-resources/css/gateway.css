/* normalize.css v3.0.2 | MIT License | git.io/normalize */
/*
* 1. Set default font family to sans-serif.
* 2. Prevent iOS text size adjust after orientation change, without disabling
*    user zoom.
*/
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/*
* Remove default margin.
*/
body {
  margin: 0;
}

/* HTML5 display definitions
========================================================================== */
/*
* Correct `block` display not defined for any HTML5 element in IE 8/9.
* Correct `block` display not defined for `details` or `summary` in IE 10/11
* and Firefox.
* Correct `block` display not defined for `main` in IE 11.
*/
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/*
* 1. Correct `inline-block` display not defined in IE 8/9.
* 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
*/
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/*
* Prevent modern browsers from displaying `audio` without controls.
* Remove excess height in iOS 5 devices.
*/
audio:not([controls]) {
  display: none;
  height: 0;
}

/*
* Address `[hidden]` styling not present in IE 8/9/10.
* Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
*/
[hidden],
template {
  display: none;
}

/* Links
========================================================================== */
/*
* Remove the gray background color from active links in IE 10.
*/
a {
  background-color: transparent;
}

/*
* Improve readability when focused and also mouse hovered in all browsers.
*/
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
========================================================================== */
/*
* Address styling not present in IE 8/9/10/11, Safari, and Chrome.
*/
abbr[title] {
  border-bottom: 1px dotted;
}

/*
* Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
*/
b,
strong {
  font-weight: bold;
}

/*
* Address styling not present in Safari and Chrome.
*/
dfn {
  font-style: italic;
}

/*
* Address variable `h1` font-size and margin within `section` and `article`
* contexts in Firefox 4+, Safari, and Chrome.
*/
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/*
* Address styling not present in IE 8/9.
*/
mark {
  background: #ff0;
  color: #000;
}

/*
* Address inconsistent and variable font size in all browsers.
*/
small {
  font-size: 80%;
}

/*
* Prevent `sub` and `sup` affecting `line-height` in all browsers.
*/
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
========================================================================== */
/*
* Remove border when inside `a` element in IE 8/9/10.
*/
img {
  border: 0;
}

/*
* Correct overflow not hidden in IE 9/10/11.
*/
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
========================================================================== */
/*
* Address margin not present in IE 8/9 and Safari.
*/
figure {
  margin: 1em 40px;
}

/*
* Address differences between Firefox and other browsers.
*/
hr {
  box-sizing: content-box;
  height: 0;
}

/*
* Contain overflow in all browsers.
*/
pre {
  overflow: auto;
}

/*
* Address odd `em`-unit font size rendering in all browsers.
*/
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
========================================================================== */
/*
* Known limitation: by default, Chrome and Safari on OS X allow very limited
* styling of `select`, unless a `border` property is set.
*/
/*
* 1. Correct color not being inherited.
*    Known issue: affects color of disabled elements.
* 2. Correct font properties not being inherited.
* 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
*/
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/*
* Address `overflow` set to `hidden` in IE 8/9/10/11.
*/
button {
  overflow: visible;
}

/*
* Address inconsistent `text-transform` inheritance for `button` and `select`.
* All other form control elements do not inherit `text-transform` values.
* Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
* Correct `select` style inheritance in Firefox.
*/
button,
select {
  text-transform: none;
}

/*
* 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
*    and `video` controls.
* 2. Correct inability to style clickable `input` types in iOS.
* 3. Improve usability and consistency of cursor style between image-type
*    `input` and others.
*/
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/*
* Re-set default cursor for disabled elements.
*/
button[disabled],
html input[disabled] {
  cursor: default;
}

/*
* Remove inner padding and border in Firefox 4+.
*/
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/*
* Address Firefox 4+ setting `line-height` on `input` using `!important` in
* the UA stylesheet.
*/
input {
  line-height: normal;
}

/*
* It's recommended that you don't attempt to style these elements.
* Firefox's implementation doesn't respect box-sizing, padding, or width.
*
* 1. Address box sizing set to `content-box` in IE 8/9/10.
* 2. Remove excess padding in IE 8/9/10.
*/
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/*
* Fix the cursor style for Chrome's increment/decrement buttons. For certain
* `font-size` values of the `input`, it causes the cursor style of the
* decrement button to change from `default` to `text`.
*/
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/*
* 1. Address `appearance` set to `searchfield` in Safari and Chrome.
* 2. Address `box-sizing` set to `border-box` in Safari and Chrome
*    (include `-moz` to future-proof).
*/
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box;
}

/*
* Remove inner padding and search cancel button in Safari and Chrome on OS X.
* Safari (but not Chrome) clips the cancel button when the search input has
* padding (and `textfield` appearance).
*/
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
* Define consistent border, margin, and padding.
*/
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/*
* 1. Correct `color` not being inherited in IE 8/9/10/11.
* 2. Remove padding so people aren't caught out if they zero out fieldsets.
*/
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/*
* Remove default vertical scrollbar in IE 8/9/10/11.
*/
textarea {
  overflow: auto;
}

/*
* Don't inherit the `font-weight` (applied by a rule above).
* NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
*/
optgroup {
  font-weight: bold;
}

/* Tables
========================================================================== */
/*
* Remove most spacing between table cells.
*/
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

.cookies.unit .policy .clear:after, .cookies.unit-modal .policy .clear:after {
  content: '';
  display: table;
  clear: both;
}

@font-face {
  font-family: 'Body Fallback';
  src: local("Arial");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Title';
  src: url("/browser-resources/fonts/futura/futura-condensed-bold.eot");
  src: url("/browser-resources/fonts/futura/futura-condensed-bold.eot?#iefix") format("embedded-opentype"), url("/browser-resources/fonts/futura/futura-condensed-bold.woff2") format("woff2"), url("/browser-resources/fonts/futura/futura-condensed-bold.woff") format("woff"), url("/browser-resources/fonts/futura/futura-condensed-bold.ttf") format("truetype"), url("/browser-resources/fonts/futura/futura-condensed-bold.svg#futura-condensed-bold") format("svg");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Title Fallback 1';
  src: local("Arial Black");
  font-weight: 700;
  font-style: normal;
}

@font-face {
  font-family: 'Title Fallback 2';
  src: local("Verdana");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Subtitle';
  src: url("/browser-resources/fonts/futura/futura-condensed.eot");
  src: url("/browser-resources/fonts/futura/futura-condensed.eot?#iefix") format("embedded-opentype"), url("/browser-resources/fonts/futura/futura-condensed.woff2") format("woff2"), url("/browser-resources/fonts/futura/futura-condensed.woff") format("woff"), url("/browser-resources/fonts/futura/futura-condensed.ttf") format("truetype"), url("/browser-resources/fonts/futura/futura-condensed.svg#futura-condensed") format("svg");
  font-weight: normal;
  font-style: normal;
}

[hidden] {
  display: none;
}

.visually-hidden {
  position: absolute;
  clip: rect(0, 0, 0, 0);
}

.is-sticky {
  position: fixed !important;
  z-index: 25;
}

@viewport {
  zoom: 1.0;
  width: device-width;
  height: device-height;
}

@-ms-viewport {
  zoom: 1.0;
  width: device-width;
  height: device-height;
}

html {
  overflow-x: hidden;
  overflow-y: scroll;
  -webkit-overflow-scrolling: touch;
  /* scrollbars in IE */
  scrollbar-base-color: #1a2024;
  scrollbar-face-color: #4e5162;
  scrollbar-track-color: #1a2024;
  scrollbar-3dlight-color: #4e5162;
  scrollbar-highlight-color: #4e5162;
  scrollbar-arrow-color: #4e5162;
  scrollbar-darkshadow-color: #4e5162;
  scrollbar-shadow-color: #4e5162;
  /* webkit scrollbar styling */
}

html ::-webkit-scrollbar {
  background: #141a1e;
}

html ::-webkit-scrollbar-track {
  background: transparent;
}

html ::-webkit-scrollbar-thumb {
  background: #4e5162;
}

html ::-webkit-scrollbar-thumb:hover {
  background: #c3c3ce;
}

html body {
  position: relative;
  min-height: 100%;
  min-width: 320px;
  line-height: 1.42857;
  max-width: 100%;
  font-family: 'Noto Sans', 'Body Fallback', sans-serif;
  font-size: 20px;
  touch-action: pan-y;
  -webkit-overflow-scrolling: touch;
  -ms-overflow-style: -ms-autohiding-scrollbar;
  -ms-touch-action: pan-y;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

html body.windows-phone {
  height: 100vh;
}

html.no-scrolling {
  overflow: hidden;
  touch-action: none;
  -webkit-overflow-scrolling: auto;
  -ms-overflow-style: none;
  -ms-touch-action: none;
}

html.no-scrolling body {
  max-height: 100vh;
  -ms-touch-action: none;
      touch-action: none;
}

@media screen and (max-width: 750px) {
  html.no-scrolling body.new-android {
    overflow: hidden;
    overflow-y: hidden;
    overflow-x: hidden;
  }
}

html.no-scrolling body.windows-phone {
  overflow-y: hidden;
}

a,
a:active,
a:visited {
  color: inherit;
  text-decoration: none;
}

a:hover {
  text-decoration: none;
}

h1 {
  font-size: 26px;
  color: #fff;
  font-weight: normal;
}

h2 {
  font-size: 20px;
  font-weight: normal;
  line-height: 14px;
}

h3 {
  font-size: 16px;
  font-weight: normal;
}

fieldset {
  margin: 0;
  padding: 0;
  border: 0;
}

input[type="text"],
input[type="password"],
input[type="email"],
input[type="url"],
input[type="date"],
input[type="month"],
input[type="time"],
input[type="datetime"],
input[type="datetime-local"],
input[type="week"],
input[type="number"],
input[type="search"],
input[type="country"],
input[type="tel"],
input[type="color"],
select,
textarea {
  box-sizing: border-box;
  height: 41px;
  line-height: 41px;
  display: inline-block;
  border: 0;
  padding: 0 0.8em 0 0.8em;
  background-color: rgba(0, 0, 0, 0.35);
}

textarea {
  resize: none;
}

ol, ul {
  margin: 0;
  padding: 0;
}

ol li, ul li {
  padding: 0;
}

button {
  border: 0;
  background: transparent;
}

hr {
  border: 0 none;
  border-top: 1px solid #101417;
  margin: 0;
  padding: 0;
  height: 0;
  overflow: hidden;
}

[visible] {
  transition-property: opacity, transform;
  transition-timing-function: ease-out;
  transition-delay: 0, 0;
  transition-duration: .5s, .5s !important;
  opacity: 0 !important;
  transform: translateY(20px) !important;
}

[visible]:nth-child(1) {
  transition-delay: 0.4s, 0.4s;
}

[visible]:nth-child(2) {
  transition-delay: 0.8s, 0.8s;
}

[visible]:nth-child(3) {
  transition-delay: 1.2s, 1.2s;
}

[visible]:nth-child(4) {
  transition-delay: 1.6s, 1.6s;
}

[visible]:nth-child(5) {
  transition-delay: 2s, 2s;
}

[visible]:nth-child(6) {
  transition-delay: 2.4s, 2.4s;
}

[visible]:nth-child(7) {
  transition-delay: 2.8s, 2.8s;
}

[visible]:nth-child(8) {
  transition-delay: 3.2s, 3.2s;
}

[visible]:nth-child(9) {
  transition-delay: 3.6s, 3.6s;
}

[visible]:nth-child(10) {
  transition-delay: 4s, 4s;
}

[visible]:nth-child(11) {
  transition-delay: 4.4s, 4.4s;
}

[visible]:nth-child(12) {
  transition-delay: 4.8s, 4.8s;
}

[visible]:nth-child(13) {
  transition-delay: 5.2s, 5.2s;
}

[visible]:nth-child(14) {
  transition-delay: 5.6s, 5.6s;
}

[visible]:nth-child(15) {
  transition-delay: 6s, 6s;
}

[visible]:nth-child(16) {
  transition-delay: 6.4s, 6.4s;
}

[visible]:nth-child(17) {
  transition-delay: 6.8s, 6.8s;
}

[visible]:nth-child(18) {
  transition-delay: 7.2s, 7.2s;
}

[visible]:nth-child(19) {
  transition-delay: 7.6s, 7.6s;
}

[visible]:nth-child(20) {
  transition-delay: 8s, 8s;
}

[visible="true"] {
  opacity: 1 !important;
  transform: translateY(0) !important;
}

[visible="false"] {
  opacity: 0 !important;
  transition-duration: .1s, .1s !important;
  transform: translateY(20px) !important;
}

svg.icon {
  vertical-align: middle;
}

svg.icon .text {
  fill: #454750;
  transition: fill .1s;
}

svg.icon .background {
  fill: transparent;
  transition: fill 1s;
}

.has-cursor svg.icon:hover .text {
  fill: #cfcfdb;
}

.has-cursor svg.icon:hover .background {
  fill: #171c1f;
}

svg.icon[variant*="negative"] .text {
  fill: #cfcfdb;
}

svg.icon[variant*="negative"] .background {
  fill: rgba(16, 20, 23, 0.8);
}

.has-cursor svg.icon[variant*="negative"]:hover .text {
  fill: #0b0e10;
}

.has-cursor svg.icon[variant*="negative"]:hover .background {
  fill: #ffffff;
}

svg.icon[variant*="switch"] .text {
  opacity: 0;
  transition: fill 0.1s, opacity 0.5s;
}

.wow {
  visibility: hidden;
}

.animated {
  visibility: visible;
  animation-duration: 1s;
  animation-fill-mode: both;
}

.animated.infinite {
  animation-iteration-count: infinite;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.animated.fadeIn {
  animation-name: fadeIn;
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translate3d(0, 100px, 0);
  }
  to {
    opacity: 1;
    transform: none;
  }
}

.animated.fadeInUp {
  animation-name: fadeInUp;
}

@keyframes fadeInRight {
  from {
    opacity: 0;
    transform: translate3d(100%, 0, 0);
  }
  to {
    opacity: 1;
    transform: none;
  }
}

.animated.fadeInRight {
  animation-name: fadeInRight;
}

@keyframes zoomIn {
  from {
    opacity: 0;
    transform: scale3d(0.1, 0.1, 0.1);
  }
  50% {
    opacity: 1;
  }
}

.animated.zoomIn {
  animation-name: zoomIn;
  animation-duration: 1.5s;
}

@keyframes pop-centered {
  50% {
    transform: translate(-50%, -50%) scale(1.03);
  }
}

@keyframes pop {
  50% {
    transform: scale(1.03);
  }
}

@keyframes slideInTop {
  0% {
    transform: translate3d(0, -120%, 0);
  }
}

@keyframes slideInBottom {
  0% {
    transform: translate3d(0, 120%, 0);
  }
}

@keyframes delayedSlideInBottom {
  0% {
    transform: translate3d(0, 120%, 0);
  }
  75% {
    transform: translate3d(0, 120%, 0);
  }
}

.lt-ie9 .wow,
.windows-phone .wow {
  visibility: visible;
}

body {
  background-color: #073416;
  background-position: top center;
  background-repeat: no-repeat;
  background-attachment: fixed;
}

body[data-fallback-background="true"] {
  background-image: url("/browser-resources/img/backgrounds/body/bg-agegateway.jpg");
}

@media screen and (min-width: 800px) {
  body {
    background-size: cover;
  }
}

@media screen and (max-width: 500px) {
  body {
    background-size: 200%;
  }
}

@media screen and (max-width: 400px) {
  body {
    background-size: 300%;
  }
}

.footer.unit a {
  color: white !important;
}

.viewport {
  z-index: 2;
  position: relative;
  box-sizing: border-box;
  min-height: 100vh;
  width: 100%;
  max-width: 100vw;
  padding: 0;
  border: 0 solid transparent;
  margin: 0 auto;
  opacity: 1;
  transition: opacity 0.5s linear;
}

.viewport > .container {
  margin-left: auto;
  margin-right: auto;
  max-width: 100%;
  position: relative;
  z-index: 3;
}

.viewport > .container:nth-child(1) {
  z-index: 12;
}

.viewport > .container:nth-child(2) {
  z-index: 11;
}

.viewport > .container:nth-child(3) {
  z-index: 10;
}

.viewport > .container:nth-child(4) {
  z-index: 9;
}

.viewport > .container:nth-child(5) {
  z-index: 8;
}

.viewport > .container:nth-child(6) {
  z-index: 7;
}

.viewport > .container:nth-child(7) {
  z-index: 6;
}

.viewport > .container:nth-child(8) {
  z-index: 5;
}

.viewport > .container:nth-child(9) {
  z-index: 4;
}

.viewport > .container:nth-child(10) {
  z-index: 3;
}

.viewport > .background.container {
  z-index: 2;
}

.loading .viewport {
  visibility: collapse !important;
  opacity: 0 !important;
  transition: opacity 1s linear;
}

.viewport[state~="pushed-down"]:before {
  content: ' ';
  display: block;
  padding-top: 90px;
}

@media screen and (max-width: 750px) {
  .viewport[state~="pushed-down"]:before {
    padding-top: 110px;
  }
}

.viewport[state~="pushed-down-extra"]:before {
  content: ' ';
  display: block;
  padding-top: 156px;
}

.viewport[state*="pushed-right"] {
  border-left-width: 228px;
}

.viewport[state*="pushed-right pushed-down-less"] {
  border-left-width: 228px;
}

.viewport[state*="pushed-right pushed-down-less"]:before {
  content: ' ';
  display: block;
  padding-top: 66px;
}

.viewport[state*="pushed-left"] {
  opacity: 0.2;
}

.viewport[state*="pushed-up"] {
  border-bottom-width: 240px;
}

.viewport[variant="stage"] {
  z-index: 1;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  opacity: 0;
}

.viewport[variant="stage"][state="active"] {
  opacity: 1;
}

.viewport[variant="size"] {
  z-index: 1;
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
  height: 100vh;
}

.viewport[variant="live"] {
  z-index: 2;
  position: relative;
}

.viewport[variant*='overlay'] {
  display: none;
}

.viewport[variant*='overlay'][state*='active'] {
  display: block;
  z-index: 3;
}

[building-page] .viewport > *:not(.background):not(.hero),
[building-page] .viewport .hero .content {
  opacity: 0;
}

.gateway .logo img {
  width: 110px;
  height: 79px;
}

@media screen and (max-width: 750px) {
  .gateway .logo img {
    width: 80px;
    height: 57px;
    margin-top: 20px;
  }
}

.gateway .title {
  color: white;
  font-family: 'Title', 'Title Fallback 1', 'Title Fallback 2', sans-serif;
  text-transform: uppercase;
  line-height: 1.1em;
  margin: 0;
  font-size: 44px;
}

@media screen and (max-width: 750px) {
  .gateway .title {
    font-size: 34px;
  }
}

.gateway .form {
  margin: 0 0 30px;
}

.gateway .form[variant="age"] {
  margin-top: 49px;
  margin-bottom: 27px;
}

@media screen and (max-width: 750px) {
  .gateway .form[variant="age"] {
    margin-top: 37px;
  }
}

.gateway .form[variant="age"] label[variant*="checkbox"] {
  display: inline-block;
}

.gateway .form[variant="age"] .label {
  margin-bottom: 10px;
}

.gateway .form[variant="age"] .content {
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: start;
  -moz-align-items: flex-start;
  align-items: flex-start;
  -ms-flex-pack: center;
  -moz-justify-content: center;
  justify-content: center;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin: 0 auto;
}

.gateway .form[variant="age"] .button {
  padding: 27px 25px 25px 25px;
  display: block;
  box-shadow: inset 0 0 0 3px rgba(255, 255, 255, 0);
  background-color: transparent;
}

@media screen and (max-width: 750px) {
  .gateway .form[variant="age"] .button {
    min-width: 260px;
    width: 80%;
    clear: both;
  }
}

@media screen and (min-width: 750px) {
  .gateway .form[variant="age"] .button {
    margin-left: 16px;
    display: inline-block;
  }
}

.gateway .form[variant="age"][state="initial"] .button, .gateway .form[variant="age"][state="progress"] .button, .gateway .form[variant="age"][state="invalid"] .button {
  display: none;
}

.gateway .form[variant="age"][state="invalid"] .input.unit[variant*="number"] {
  color: white !important;
  background-color: #AA0024 !important;
}

.gateway .form[variant="age"][state="invalid"] .input.unit[variant*="number"]:-ms-input-placeholder {
  color: white;
}

.gateway .form[variant="age"][state="invalid"] .input.unit[variant*="number"]::-webkit-input-placeholder {
  color: white;
}

.gateway .form[variant="age"][state="invalid"] .input.unit[variant*="number"]::-moz-placeholder {
  color: white;
  opacity: 1;
}

.gateway .form[variant="age"][state="valid"] .button {
  background-color: #47a742;
}

.gateway .form[variant="age"][state="valid"] .button:focus {
  color: white;
  outline: 0 none;
  background-color: #47a742;
}

.has-cursor .gateway .form[variant="age"][state="valid"] .button:hover {
  color: #0b0e10;
  outline: 0 none;
  background-color: white;
}

.gateway .form[variant="connect"] {
  margin: 45px 0 11px 0;
}

@media screen and (max-width: 750px) {
  .gateway .form[variant="connect"] {
    margin-top: 29px;
  }
}

.gateway .form[variant="connect"] .content {
  display: block;
  overflow: hidden;
}

.gateway .form[variant="connect"] .label {
  margin-bottom: 11px;
}

.gateway .form[variant="connect"] .button {
  margin: 0 0 15px 0;
  padding: 16px 30px;
  min-width: 236px;
  box-shadow: inset 0 0 0 0px rgba(255, 255, 255, 0);
}

@media screen and (max-width: 750px) {
  .gateway .form[variant="connect"] .button {
    width: 80%;
  }
}

.gateway .form[variant="connect"] .button .default,
.gateway .form[variant="connect"] .button .busy,
.gateway .form[variant="connect"] .button .failed,
.gateway .form[variant="connect"] .button .done {
  display: none;
}

.gateway .form[variant="connect"] .button[state="default"] .default {
  display: inline-block;
}

.gateway .form[variant="connect"] .button[state="active"] {
  box-shadow: inset 0 0 0 4px white;
  background-color: white;
  color: #000000;
}

.gateway .form[variant="connect"] .button[state="active"] .text {
  fill: #000000;
}

.gateway .form[variant="connect"] .button[state="active"] span {
  display: none;
}

.gateway .form[variant="connect"] .button[state="active"] .busy {
  display: inline-block;
}

.gateway .form[variant="connect"] .button[state="failed"] {
  box-shadow: inset 0 0 0 4px white;
  background-color: white;
  color: #000000;
}

.gateway .form[variant="connect"] .button[state="failed"] .text {
  fill: #000000;
}

.gateway .form[variant="connect"] .button[state="failed"] span {
  display: none;
}

.gateway .form[variant="connect"] .button[state="failed"] .failed {
  display: inline-block;
}

.gateway .form[variant="connect"] .button[state="done"] .done {
  display: inline-block;
}

.gateway .input.container {
  position: relative;
  max-width: 100%;
  margin: 0 0 12px 0;
}

@media screen and (max-width: 750px) {
  .gateway .input.container {
    width: 80%;
    margin: 0 0 15px 0;
  }
}

.gateway .input.container[variant*="country"] select {
  display: none;
}

@media screen and (max-width: 750px) {
  .gateway .input.container[variant*="country"] select {
    display: block;
    z-index: 1;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
  }
}

.gateway .input.container[variant*="country"] .clear {
  z-index: 2;
  position: absolute;
  display: block;
  right: 10px;
  top: 0;
  height: 100%;
  width: 30px;
  margin: 0 6px;
  cursor: pointer;
}

.gateway .input.container[variant*="country"] .clear > * {
  width: 100%;
  height: 100%;
}

.gateway .input.container[variant*="country"] .clear .background {
  fill: rgba(0, 0, 0, 0.05);
}

.gateway .input.container[variant*="country"] .clear .text {
  fill: rgba(0, 0, 0, 0.4);
}

.gateway .input.container[variant*="country"] .clear:focus {
  outline: 0 none;
}

.gateway .input.container[variant*="country"] .clear:focus .background {
  fill: rgba(0, 0, 0, 0.1);
}

.gateway .input.container[variant*="date"] {
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: start;
  -moz-align-items: flex-start;
  align-items: flex-start;
  -ms-flex-pack: center;
  -moz-justify-content: center;
  justify-content: center;
}

.gateway .input.container[variant*="checkbox"] {
  text-align: left;
}

@media screen and (min-width: 751px) {
  .gateway .input.container[variant*="checkbox"] {
    margin-left: auto;
    margin-right: auto;
  }
}

.gateway .input.container[variant*="checkbox"] .label {
  padding-left: 25px;
  font-size: 12px;
  font-family: 'Subtitle', 'Default Fallback', sans-serif;
  line-height: 1.2;
  margin-bottom: 0;
  position: relative;
  cursor: pointer;
  letter-spacing: .05em;
  position: relative;
}

@media screen and (max-width: 750px) {
  .gateway .input.container[variant*="checkbox"] .label {
    padding-left: 35px;
    max-width: 200px;
    line-height: 1;
  }
}

.gateway .input.container[variant*="checkbox"] .label::before {
  content: "";
  position: absolute;
  left: 0;
  width: 15px;
  height: 15px;
  box-sizing: border-box;
  overflow: hidden;
  border: 2px solid #fff;
  transition: all .3s linear, color .16s linear, font-size .16s ease-in;
}

@media screen and (max-width: 750px) {
  .gateway .input.container[variant*="checkbox"] .label::before {
    width: 20px;
    height: 20px;
    border-width: 3px;
  }
}

.gateway .input.container[variant*="checkbox"] .label svg {
  width: 11.5px;
  height: auto;
  position: absolute;
  left: 2.5px;
  top: 2px;
  transform: scaleY(0.5);
  transform-origin: bottom;
  transition: fill .3s linear, opacity .06s linear, transform .12s ease-in;
  opacity: 0;
}

@media screen and (max-width: 750px) {
  .gateway .input.container[variant*="checkbox"] .label svg {
    width: 15px;
    left: 3.5px;
    top: 3.5px;
  }
}

.gateway .input.container[variant*="checkbox"] :checked + .label svg {
  opacity: 1;
  transform: scaleY(1);
}

.gateway .input.container[variant*="checkbox"]:hover :checked + .label svg {
  fill: #000;
}

.gateway .input.container[variant*="checkbox"]:hover .label::before {
  background-color: white;
}

.gateway .input.container[variant*="checkbox"] small {
  font-size: 1em;
}

@media screen and (min-width: 751px) {
  .gateway .input.container[variant*="checkbox"] small {
    padding-left: .25em;
    padding-top: .3em;
  }
}

.gateway .input.container[variant*="checkbox"].input--xs .label {
  font-size: 10px;
}

.gateway .input.container[variant*="checkbox"].input--xs .label::before {
  top: -1px;
}

@media screen and (max-width: 750px) {
  .gateway .input.container[variant*="checkbox"].input--xs .label {
    max-width: 165px;
  }
}

.gateway .input.container[variant*="checkbox"].input--s .label {
  font-size: 11px;
}

.gateway .input.container[variant*="checkbox"].input--s .label::before {
  top: -1px;
}

@media screen and (max-width: 750px) {
  .gateway .input.container[variant*="checkbox"].input--s .label {
    max-width: 180px;
  }
}

.gateway .input.container[variant*="checkbox"].input--l .label {
  font-size: 14px;
}

.gateway .input.container[variant*="checkbox"].input--l .label svg {
  top: 3px;
}

@media screen and (max-width: 750px) {
  .gateway .input.container[variant*="checkbox"].input--l .label {
    max-width: 230px;
  }
  .gateway .input.container[variant*="checkbox"].input--l .label svg {
    top: 4px;
  }
}

.gateway .input.container[variant*="checkbox"].input--xl .label {
  font-size: 18px;
}

.gateway .input.container[variant*="checkbox"].input--xl .label::before {
  top: 3.5px;
}

.gateway .input.container[variant*="checkbox"].input--xl .label svg {
  top: 6px;
}

@media screen and (max-width: 750px) {
  .gateway .input.container[variant*="checkbox"].input--xl .label {
    max-width: 300px;
  }
  .gateway .input.container[variant*="checkbox"].input--xl .label::before {
    top: 1.5px;
  }
  .gateway .input.container[variant*="checkbox"].input--xl .label svg {
    top: 5px;
  }
}

.gateway .input.unit {
  height: 70px;
  font-family: 'Title', 'Title Fallback 1', 'Title Fallback 2', sans-serif;
  text-align: center;
  border-radius: 0;
  background: black;
  border: solid 3px white;
  color: white;
  transition: background-color .4s ease, border .4s ease, color .4s ease;
}

.has-cursor .gateway .input.unit:hover {
  background-color: white;
  color: #0b0e10;
}

.has-cursor .gateway .input.unit:hover:-ms-input-placeholder {
  color: #0b0e10;
}

.has-cursor .gateway .input.unit:hover::-webkit-input-placeholder {
  color: #0b0e10;
}

.has-cursor .gateway .input.unit:hover::-moz-placeholder {
  color: #0b0e10;
  opacity: 1;
}

.gateway .input.unit[variant*="country"] {
  position: relative;
  width: 266px;
  margin: 0 3px;
  background-image: url("/browser-resources/img/icons/world.svg");
  background-repeat: no-repeat;
  background-position: 95%;
  background-size: 19px;
  text-align: left;
  text-transform: uppercase;
  padding: 0 43px 0 24px;
}

@media screen and (max-width: 750px) {
  .gateway .input.unit[variant*="country"] {
    width: 100%;
  }
}

.gateway .input.unit[variant*="country"]:focus,
.has-cursor .gateway .input.unit[variant*="country"][state="valid"]:hover {
  background-position: 95%;
  background-image: url("/browser-resources/img/icons/world-black.svg");
  background-repeat: no-repeat;
  background-size: 19px;
}

.gateway .input.unit[variant*="country"]::-ms-clear {
  display: none;
}

.gateway .input.unit[variant*="number"] {
  position: relative;
  width: 100px;
  margin-left: -3px;
  -moz-appearance: textfield;
  -o-appearance: textfield;
  -webkit-appearance: textfield;
          appearance: textfield;
}

.gateway .input.unit[variant*="number"]::-webkit-inner-spin-button {
  -webkit-appearance: none;
}

@media screen and (max-width: 750px) {
  .gateway .input.unit[variant*="number"][variant*="day"] {
    margin-left: 0;
  }
}

@media screen and (max-width: 750px) {
  .gateway .input.unit[variant*="number"] {
    width: 100%;
  }
}

.gateway .input.unit[variant*="overlay"] {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  width: 100%;
  padding: 0;
  margin: 0;
  border: 0;
  opacity: 0;
  display: none;
}

.gateway .input.unit[variant*="overlay"]::-webkit-calendar-picker-indicator {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 100%;
  padding: 0;
  margin: 0;
  z-index: 999999;
  opacity: 0;
}

.gateway .input.unit[variant*="overlay"][state*="active"] {
  display: block;
}

.gateway .input.unit[state="invalid"], .gateway .input.unit:invalid {
  background-color: #AA0024;
}

.gateway .input.unit[state="invalid"]:focus, .gateway .input.unit:invalid:focus {
  background-color: white;
  color: #0b0e10;
}

.gateway .input.unit[state="invalid"]:focus:-ms-input-placeholder, .gateway .input.unit:invalid:focus:-ms-input-placeholder {
  color: #0b0e10;
}

.gateway .input.unit[state="invalid"]:focus::-webkit-input-placeholder, .gateway .input.unit:invalid:focus::-webkit-input-placeholder {
  color: #0b0e10;
}

.gateway .input.unit[state="invalid"]:focus::-moz-placeholder, .gateway .input.unit:invalid:focus::-moz-placeholder {
  color: #0b0e10;
  opacity: 1;
}

.gateway .input.unit[state="empty"] {
  background-color: black;
  color: white;
}

.gateway .input.unit[state="empty"]:-ms-input-placeholder {
  color: white;
}

.gateway .input.unit[state="empty"]::-webkit-input-placeholder {
  color: white;
}

.gateway .input.unit[state="empty"]::-moz-placeholder {
  color: white;
  opacity: 1;
}

.gateway .input.unit:focus {
  outline: 0 none;
  background-color: white;
  color: #0b0e10;
}

.gateway .input.unit:focus:-ms-input-placeholder {
  color: #0b0e10;
}

.gateway .input.unit:focus::-webkit-input-placeholder {
  color: #0b0e10;
}

.gateway .input.unit:focus::-moz-placeholder {
  color: #0b0e10;
  opacity: 1;
}

.gateway .label {
  display: block;
  font-family: 'Title', 'Title Fallback 1', 'Title Fallback 2', sans-serif;
  font-size: 18px;
  font-weight: normal;
  color: white;
  text-transform: uppercase;
  line-height: 1em;
}

.gateway .button {
  display: inline-block;
  line-height: 1em;
  box-sizing: border-box;
  box-shadow: inset 0 0 0 0 rgba(255, 255, 255, 0);
  border: 0 none;
  margin: 0 0 12px;
  padding: 16px 30px;
  padding-top: 16px;
  animation: gateway-grow .16s ease-out;
  color: white;
  font-family: 'Title', 'Title Fallback 1', 'Title Fallback 2', sans-serif;
  text-transform: uppercase;
  transition: background-color .8s, color .1s, box-shadow 0.4s;
  font-size: 18px;
}

@keyframes gateway-grow {
  0% {
    transform: scale(0.85);
    opacity: 0;
  }
}

@media screen and (max-width: 750px) {
  .gateway .button {
    margin: 0 0 15px;
  }
}

.gateway .button[variant="color1"] {
  background: #4661a2;
}

.gateway .button[variant="color2"] {
  background: #5daaf3;
}

.gateway .button[variant="color3"] {
  background: #c52118;
}

.gateway .button .icon {
  vertical-align: text-bottom;
  margin-right: 10px;
}

.gateway .button .text {
  fill: white;
  transition: fill .1s;
}

.gateway .button:focus, .gateway .button:hover {
  box-shadow: inset 0 0 0 4px white;
  background-color: white;
  outline: 0;
  color: #000000;
}

.gateway .button:focus .text, .gateway .button:hover .text {
  fill: #000000;
}

.gateway .button .default,
.gateway .button .busy,
.gateway .button .failed,
.gateway .button .done {
  display: none;
}

.gateway .button[state="default"] .default {
  display: inline-block;
}

.gateway .button[state="active"] .active {
  display: inline-block;
}

.gateway .button[state="failed"] .failed {
  display: inline-block;
}

.gateway .button[state="done"] .done {
  display: inline-block;
}

.gateway .datalist .input.unit {
  margin: 0;
}

.gateway .datalist > ul {
  position: absolute;
  z-index: 1;
  top: 100%;
  right: 0;
  left: 0;
  overflow: hidden;
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
  box-sizing: border-box;
  list-style: none;
  max-height: 130px;
  padding: 0;
  background: white;
}

@supports (transform: scale(0)) {
  .gateway .datalist > ul {
    transition: 0.3s cubic-bezier(0.4, 0.2, 0.5, 1.4);
    transform-origin: 1.43em -.43em;
  }
}

.gateway .datalist > ul:after {
  position: absolute;
  right: 0;
  bottom: 0;
  left: 0;
  height: 20px;
  background: red;
}

.gateway .datalist > ul[hidden], .gateway .datalist > ul:empty {
  display: none;
}

@supports (transform: scale(0)) {
  .gateway .datalist > ul[hidden], .gateway .datalist > ul:empty {
    opacity: 0;
    transform: scale(0);
    display: block;
    transition-timing-function: ease;
  }
}

.gateway .datalist > ul > li {
  position: relative;
  padding: .2em 15px;
  cursor: pointer;
  font-family: 'Subtitle', 'Default Fallback', sans-serif;
  font-size: 20px;
  text-align: left;
  text-transform: uppercase;
}

.gateway .datalist > ul > li:hover, .gateway .datalist > ul > li[aria-selected="true"] {
  background: #c3c3ce;
  color: #000000;
}

.gateway.container {
  position: relative;
  width: 100%;
  height: 100vh;
  height: calc(100vh - 110px);
}

@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
  .gateway.container {
    height: calc(100vh - 110px);
  }
}

@media screen and (min-width: 751px) {
  .gateway.container {
    min-height: calc(100vh - 110px);
    display: -moz-flex;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-align: center;
    -moz-align-items: center;
    align-items: center;
    -ms-flex-pack: center;
    -moz-justify-content: center;
    justify-content: center;
  }
}

@media screen and (max-width: 750px), screen and (max-height: 700px) {
  .gateway.container {
    height: auto !important;
    min-height: 10px !important;
    display: block;
    padding-top: 50px;
  }
}

.gateway.unit {
  text-align: center;
}

.gateway.unit .cookies {
  text-align: left;
}

.gateway.unit .cookies.container {
  background: rgba(0, 0, 0, 0.8);
  top: 0;
  left: 0;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center;
  -ms-flex-pack: center;
      justify-content: center;
  position: fixed;
  z-index: 1;
  width: 100%;
  min-height: 100%;
}

.gateway.unit .cookies.container[state="hidden"] {
  display: none;
}

.gateway.unit .cookies.unit {
  background: #171C1F;
  width: 310px;
  border: 3px solid white;
  padding: 40px 10px 60px 30px;
}

.gateway.unit .cookies.unit .policy {
  display: none;
}

.gateway.unit .cookies.unit .policy[state="active"] {
  display: block;
}

.gateway.unit .cookies.unit .policy .title {
  color: white;
  font-size: 25px;
  text-transform: uppercase;
  font-family: 'Title', 'Title Fallback 1', 'Title Fallback 2', sans-serif;
}

.gateway.unit .cookies.unit .policy .message {
  color: white;
  font-size: 12px;
}

.gateway.unit .cookies.unit .policy .divider {
  width: 57px;
  height: 2px;
  background: white;
}

.gateway.unit .cookies.unit .policy .changelink {
  color: #005d1f;
  cursor: pointer;
}

.gateway.unit .cookies.unit .policy .link {
  font-size: 12px;
  text-decoration: underline;
}

.gateway.unit .cookies.unit .policy .policylink {
  color: #fff;
}

.gateway.unit .cookies.unit .policy .button {
  margin-top: 20px;
  display: inline-block;
  line-height: 1em;
  box-sizing: border-box;
  box-shadow: inset 0 0 0 0 rgba(255, 255, 255, 0);
  background-color: #005d1f;
  padding: 16px 30px;
  box-sizing: border-box;
  color: white;
  font-family: 'Title', 'Title Fallback 1', 'Title Fallback 2', sans-serif;
  text-transform: uppercase;
  transition: background-color .8s, color .1s, box-shadow 0.4s;
  font-size: 18px;
}

.gateway.unit .cookies.unit .policy .button .text {
  display: inline-block;
  margin-left: 10px;
}

.gateway.unit .cookies.unit .policy .button .checkmark {
  fill: #fff;
}

.gateway.unit .cookies.unit .policy .button:focus, .gateway.unit .cookies.unit .policy .button:hover {
  box-shadow: inset 0 0 0 4px white;
  background-color: white;
  color: #000000;
}

.gateway.unit .cookies.unit .policy .button:focus .checkmark, .gateway.unit .cookies.unit .policy .button:hover .checkmark {
  fill: #000;
}

.gateway.unit .cookies.unit .settings {
  display: none;
}

.gateway.unit .cookies.unit .settings[state="active"] {
  display: block;
}

.gateway.unit .cookies.unit .settings .title {
  color: white;
  font-size: 25px;
  margin-bottom: 12px;
  text-transform: uppercase;
  font-family: 'Title', 'Title Fallback 1', 'Title Fallback 2', sans-serif;
}

.gateway.unit .cookies.unit .settings .message {
  color: white;
  font-size: 12px;
  font-weight: 700;
}

.gateway.unit .cookies.unit .settings .divider {
  width: 57px;
  height: 2px;
  background: white;
}

.gateway.unit .cookies.unit .settings .checkbox {
  font-size: 12px;
  color: white;
  margin-right: 36px;
}

.gateway.unit .cookies.unit .settings .checkbox .text {
  padding: 0px 0 10px 30px;
}

.gateway.unit .cookies.unit .settings .checkbox .input {
  float: left;
  width: 15px;
  height: 15px;
  display: block;
}

.gateway.unit .cookies.unit .settings .button {
  margin-top: 20px;
  display: inline-block;
  line-height: 1em;
  box-sizing: border-box;
  border: 3px solid #fff;
  padding: 16px 30px;
  color: white;
  font-family: 'Title', 'Title Fallback 1', 'Title Fallback 2', sans-serif;
  text-transform: uppercase;
  transition: background-color .8s, color .1s, box-shadow 0.4s;
  font-size: 18px;
}

.gateway.unit .cookies.unit .settings .button .text {
  display: inline-block;
}

.gateway.unit .cookies.unit .settings .button .checkmark {
  fill: #fff;
}

.gateway.unit .cookies.unit .settings .button:focus, .gateway.unit .cookies.unit .settings .button:hover {
  box-shadow: inset 0 0 0 4px white;
  background-color: white;
  color: #000000;
}

.gateway.unit .cookies.unit .settings .button:focus .checkmark, .gateway.unit .cookies.unit .settings .button:hover .checkmark {
  fill: #000;
}

.viewport {
  background-color: transparent;
}

.gateway.container ~ .footer.container {
  position: relative;
  z-index: 4;
  width: auto;
  max-width: 100%;
}

@media screen and (min-width: 750px) and (min-height: 700px) {
  .gateway.container ~ .footer.container {
    position: fixed;
    left: 0;
    right: 0;
    bottom: 0;
    width: auto;
  }
}

.footer.unit [variant*="company"] {
  margin-bottom: 10px;
}

.footer.unit .privacy {
  font-size: 13px;
  margin-bottom: 4px;
  font-family: 'Subtitle', 'Default Fallback', sans-serif;
  text-transform: uppercase;
  line-height: 18px;
  left: 0;
  color: white;
  letter-spacing: 0.5px;
}

.footer.unit .privacy a {
  color: white;
  text-decoration: underline;
}

.footer.unit .privacy a:hover {
  color: white;
}

.footer.unit .privacy > * {
  margin: 0;
}

@media screen and (max-width: 750px) {
  .footer.unit .privacy {
    margin: 60px 0 0 0;
    padding: 0 20px 10px;
    width: 80%;
    margin-left: auto;
    margin-right: auto;
    font-size: 18px;
  }
}

.footer.unit a {
  color: #9898ab;
}

.footer.unit a:hover {
  color: white;
}

@media screen and (max-height: 700px) {
  .footer.container .legal.container {
    display: none;
  }
}

.haslegal .gateway.container {
  padding-top: 20px;
  box-sizing: border-box;
}

.haslegal .gateway.container ~ .footer.container {
  bottom: 0;
}

@media screen and (min-width: 750px) and (min-height: 700px) {
  .haslegal .gateway.container ~ .footer.container {
    bottom: 110px;
  }
}

.haslegal .footer.container .legal.container {
  display: none;
}

@supports (-ms-ime-align: auto) {
  body.loading .viewport {
    opacity: 1;
    visibility: hidden;
  }
}

.gateway-message.container .logo img {
  width: 110px;
  height: 100%;
}

.gateway-message.container .title {
  font-size: 40px;
  font-family: 'Title', 'Title Fallback 1', 'Title Fallback 2', sans-serif;
  text-transform: uppercase;
  color: white;
  line-height: 1em;
}

.gateway-message.container .text {
  color: white;
  font-size: 14px;
  line-height: 1.8em;
}

@media screen and (min-width: 800px) {
  .gateway-message.container .text {
    width: 800px;
  }
}

@media screen and (min-width: 1024px) {
  .gateway-message.container .text {
    width: 1024px;
  }
}

.gateway-message.container .button {
  width: 230px;
  min-height: 60px;
  margin: 20px;
  display: inline-block;
  background-color: transparent;
  box-shadow: inset 0 0 0 3px white;
  font-size: 18px;
  font-family: 'Title', 'Title Fallback 1', 'Title Fallback 2', sans-serif;
  color: white;
  text-transform: uppercase;
  transition: background-color .8s,  color .1s,  box-shadow 0.4s;
}

.gateway-message.container .button:hover {
  background-color: white;
  color: #000000;
}

@media screen and (max-width: 700px) {
  .gateway-message.container .button {
    clear: both;
    width: 80%;
    margin-bottom: 20px;
    margin-right: 0;
  }
}

.gateway-message.container .button[variant="negative"] {
  box-shadow: inset 0 0 0 3px #c52118;
  color: #c52118;
}

.gateway-message.container .button[variant="negative"]:hover {
  background-color: #c52118;
  color: white;
}

.gateway-message.container .button[variant="positive"] {
  box-shadow: inset 0 0 0 3px #47a742;
  color: #47a742;
}

.gateway-message.container .button[variant="positive"]:hover {
  background-color: #47a742;
  color: white;
}

.gateway-message.container {
  position: relative;
  width: 100%;
  height: 100vh;
  height: calc(100vh - 110px);
}

@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
  .gateway-message.container {
    height: calc(100vh - 110px);
  }
}

@media screen and (min-width: 751px) {
  .gateway-message.container {
    min-height: calc(100vh - 110px);
    display: -moz-flex;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-align: center;
    -moz-align-items: center;
    align-items: center;
    -ms-flex-pack: center;
    -moz-justify-content: center;
    justify-content: center;
  }
}

@media screen and (max-width: 750px), screen and (max-height: 700px) {
  .gateway-message.container {
    height: auto !important;
    min-height: 10px !important;
    display: block;
    padding-top: 50px;
  }
}

.gateway-message.container ~ .footer.container {
  position: relative;
  z-index: 4;
  width: auto;
  max-width: 100%;
}

@media screen and (min-width: 750px) and (min-height: 700px) {
  .gateway-message.container ~ .footer.container {
    position: fixed;
    left: 0;
    right: 0;
    bottom: 0;
    width: auto;
  }
}

.gateway-message.container > .unit {
  text-align: center;
}

.footer.container {
  overflow: hidden;
  position: relative;
  z-index: 2;
  padding: 0 20px;
  left: 0;
  right: 0;
  bottom: 0;
  max-width: 1100px;
  width: auto;
  margin: 0 auto;
  transform: translate3d(0, 0, 0);
}

@media screen and (max-width: 750px) {
  .footer.container .secondary-desktop {
    display: none;
  }
  .footer.container .secondary-mobile {
    display: block;
  }
}

@media screen and (min-width: 751px) {
  .footer.container .secondary-desktop {
    display: block;
  }
  .footer.container .secondary-mobile {
    display: none;
  }
}

@media screen and (max-width: 750px) {
  .footer.container {
    width: 100%;
    width: 100vw;
    max-width: 100vw;
    padding: 0;
    margin: 0;
  }
}

@media screen and (min-width: 751px) {
  .footer.container {
    padding-left: 60px;
    padding-right: 60px;
  }
}

@media screen and (min-width: 1449px) {
  .footer.container {
    width: 1100px;
  }
}

.footer.container[variant='hidden'] {
  position: relative;
  opacity: 0.000001;
}

.footer.container[variant='absolute'] {
  position: absolute;
  left: 0;
  right: 0;
  z-index: 25;
}

@media screen and (max-width: 750px) {
  .footer.container[variant='absolute'] {
    width: 100vw;
  }
}

.footer.container[variant='absolute'][modifier='haslegal'] {
  bottom: 110px;
}

@media screen and (max-width: 750px) {
  .footer.container[variant='absolute'][modifier='haslegal'] {
    bottom: 100px;
  }
}

.footer.unit h1, .footer.unit h2, .footer.unit h3, .footer.unit p {
  margin: 0;
}

.footer.unit[variant*="company"] .menu {
  display: block;
  list-style: none;
  font-family: 'Title', 'Title Fallback 1', 'Title Fallback 2', sans-serif;
  text-transform: uppercase;
}

.footer.unit[variant*="company"] .menu[variant*="main"] {
  color: #9898ab;
}

.footer.unit[variant*="company"] .menu[variant*="main"] li:hover {
  color: white;
}

.footer.unit[variant*="company"] .menu[variant*="main"] .text {
  fill: currentColor;
}

.footer.unit[variant*="company"] .menu[variant*="secondary"] {
  color: #e2e2ed;
}

.footer.unit[variant*="company"] .menu[variant*="secondary"] li {
  cursor: pointer;
}

.footer.unit[variant*="company"] .menu[variant*="secondary"] li:hover {
  color: white;
}

.footer.unit[variant*="company"] .menu[variant*="secondary"] .text {
  fill: currentColor;
}

.footer.unit[variant*="company"] .menu[variant*="secondary"] > li > a {
  cursor: pointer;
  line-height: 24px;
  text-align: center;
}

.footer.unit[variant*="company"] .menu img {
  vertical-align: middle;
  display: inline;
  max-height: 28px;
  opacity: 0.8;
}

.footer.unit[variant*="company"] .menu img:hover {
  opacity: 1;
}

@media screen and (max-width: 750px) {
  .footer.unit[variant*="company"] {
    background: #0b0e10;
    padding-bottom: 20px;
  }
  .footer.unit[variant*="company"] .icon[name="enjoy-responsibly"] {
    height: 42px;
    width: 42px;
    margin: 10px;
  }
  .footer.unit[variant*="company"] .icon[name="world"] {
    margin-left: 5px;
    width: 18px;
    height: 18px;
    vertical-align: middle;
    margin-top: -4px;
  }
  .footer.unit[variant*="company"] .menu {
    list-style: none;
    text-transform: uppercase;
  }
  .footer.unit[variant*="company"] .menu > li {
    overflow: hidden;
    font-size: 15px;
    font-family: 'Title', 'Title Fallback 1', 'Title Fallback 2', sans-serif;
  }
  .footer.unit[variant*="company"] .menu > li > div,
  .footer.unit[variant*="company"] .menu > li > a {
    display: block;
    line-height: 34px;
    padding: 20px 10px;
    text-align: center;
  }
  .footer.unit[variant*="company"] .menu > li > a:hover,
  .footer.unit[variant*="company"] .menu > li div:hover,
  .footer.unit[variant*="company"] .menu > li[state="active"] > a {
    background: rgba(158, 186, 196, 0.06);
    color: #c3c3ce;
  }
}

@media screen and (min-width: 751px) {
  .footer.unit[variant*="company"] {
    overflow: hidden;
    margin: 15px -10px 20px -10px;
  }
  .footer.unit[variant*="company"] .icon[name="enjoy-responsibly"] {
    height: 42px;
    width: 42px;
  }
  .footer.unit[variant*="company"] .icon[name="world"] {
    margin-left: 5px;
    width: 16px;
    height: 16px;
    vertical-align: middle;
    margin-top: -4px;
  }
  .footer.unit[variant*="company"] .menu {
    font-size: 14px;
    line-height: 44px;
  }
  .footer.unit[variant*="company"] .menu[variant*="main"] {
    float: left;
  }
  .footer.unit[variant*="company"] .menu[variant*="secondary"] {
    float: right;
  }
  .footer.unit[variant*="company"] .menu > * {
    display: inline-block;
    padding: 0 10px;
    white-space: nowrap;
  }
}

.footer.unit[modifier*="centered"] {
  text-align: center;
}

.footer.unit[modifier*="centered"] .menu[variant*="main"],
.footer.unit[modifier*="centered"] .menu[variant*="secondary"] {
  float: none;
  display: block;
}

.footer.unit[modifier*="bright"] {
  color: white;
}

.footer.unit[modifier*="bright"] .menu[variant*="main"],
.footer.unit[modifier*="bright"] .menu[variant*="secondary"] {
  color: white;
}

.footer.unit[modifier*="gateway"] {
  background-color: transparent;
}

.footer.unit[modifier*="gateway"] .menu[variant*="main"] {
  display: inline-table;
}

.footer.unit[modifier*="gateway"] .menu[variant*="main"] li {
  float: left;
}

@media screen and (min-width: 751px) {
  .trigger.container + .footer {
    padding-left: 11%;
    padding-right: 11%;
    max-width: 100%;
  }
  .product.container ~ .footer.container {
    box-sizing: border-box;
    position: absolute;
    bottom: 0;
    z-index: 3;
    left: 0;
    right: 0;
    padding-right: 0;
    margin-right: 125px;
    width: 90%;
    width: calc(100vw - 125px);
    max-width: 100vw;
  }
  .product.container ~ .footer.container[modifier="haslegal"] {
    bottom: 110px;
  }
  .product.container ~ .footer + .legal {
    background-color: transparent;
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    right: 90px;
  }
  .product.container ~ .footer + .legal .unit {
    padding: 0 0 0 60px;
  }
  .faq.container ~ .footer.container {
    max-width: 880px;
  }
}

@media screen and (min-width: 751px) and (min-width: 1015px) {
  .faq.container ~ .footer.container {
    width: 100%;
  }
}

.background[variant="default"] {
  position: fixed;
  z-index: 2;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  transition: opacity 1s linear, background 1s;
}

@media screen and (max-width: 750px) {
  .background[variant="default"] {
    height: calc(100vh + 100px);
  }
  .background[variant="default"] img {
    max-width: 100%;
    max-width: 100vw;
    max-height: 100%;
    max-height: 100vh;
  }
}

.background[variant="default"] .image_ratio {
  position: relative;
  min-width: 100%;
  min-height: 100%;
  width: 100vh;
}

.background[variant="default"] .image_ratio:before {
  content: '';
  display: block;
  position: relative;
  padding-top: 100%;
}

.background[variant="default"] .image_ratio img,
.background[variant="default"] .image_ratio video,
.background[variant="default"] .image_ratio embed,
.background[variant="default"] .image_ratio object,
.background[variant="default"] .image_ratio video,
.background[variant="default"] .image_ratio iframe {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  object-fit: cover;
  transform: translate(0, 0);
}

.background[variant="default"] * {
  pointer-events: none !important;
}

.background[variant="default"] > .unit {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.background[variant="default"] > .unit img {
  border: 0 none;
  min-width: 100%;
  min-height: 100%;
  opacity: 0;
  transition: opacity 1.5s linear 1s;
}

.background[variant="default"] > .unit * {
  pointer-events: none !important;
}

.background[variant="default"] > .unit.regular, .background[variant="default"] > .unit.blurred {
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -moz-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -ms-flex-align: center;
  -moz-align-items: center;
  align-items: center;
  -ms-flex-pack: center;
  -moz-justify-content: center;
  justify-content: center;
}

@media screen and (min-aspect-ratio: 1 / 1) {
  .background[variant="default"] > .unit.regular, .background[variant="default"] > .unit.blurred {
    -moz-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

.background[variant="default"] > .unit.regular {
  z-index: 2;
}

.background[variant="default"] > .unit.blurred {
  z-index: 3;
}

.background[variant="default"] > .unit[state*="active"] img {
  opacity: 1;
}

.background[variant="editing"].container {
  position: relative;
  width: 960px;
  margin: 0 auto;
}

.background[variant="editing"] > .unit {
  position: relative;
  width: 960px;
  height: 540px;
  max-width: 100%;
}

.background[variant="editing"] > .unit * {
  max-width: 100%;
  height: auto;
}

.background.container[modifier="dimmed"] .blurred:after {
  opacity: 1;
  transform: translateY(0);
}

.background.container .blurred:after {
  z-index: 3;
  position: absolute;
  right: 0;
  bottom: 0;
  left: 0;
  content: "";
  background: linear-gradient(to bottom, transparent, #171c1f);
  height: 350px;
  opacity: 0;
  transform: translateY(150px);
  transition: transform 1s, opacity 1s;
}

.background.fully-dim.background.fully-dim {
  background: #0b0e10;
}

.background.fully-dim.background.fully-dim img,
.background.fully-dim.background.fully-dim iframe {
  opacity: 0;
}

.background.fully-dim.background.fully-dim .image_ratio img,
.background.fully-dim.background.fully-dim .image_ratio iframe {
  opacity: 0;
}

.cookies {
  text-align: left;
}

.cookies.container {
  top: 0;
  left: 0;
  position: fixed;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center;
  -ms-flex-pack: center;
      justify-content: center;
  z-index: 7;
  width: 100%;
}

.cookies.container[state="hidden"] {
  display: none;
}

.cookies.container.modal {
  background-color: #171d21;
  background-color: rgba(23, 29, 33, 0.8);
  min-height: 100%;
  height: 100%;
  z-index: 25;
}

@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
  .cookies.container.modal {
    height: 100vh;
  }
}

.overlay[state="active"] ~ .cookies.container {
  z-index: 10;
}

.cookies.unit {
  box-sizing: border-box;
  background: #171C1F no-repeat 0 0;
  background-image: linear-gradient(#fff, #fff);
  background-size: 100% 2px;
  background-position: 0 -2px;
  border-bottom: 2px solid white;
  width: 100%;
  overflow: visible;
  position: absolute;
  top: 0;
  left: 0;
  transition: .3s ease-out;
  transform-origin: top;
  animation: cookie-slide 3s ease-in;
  padding: 0 20px;
}

[state="pushed-down"] ~ .overlay:not([state="active"]) ~ .container .cookies.unit:not(.no-nav),
[state="pushed-down-extra"] ~ .overlay:not([state="active"]) ~ .container .cookies.unit.nav-subs {
  padding-top: 92px;
  background-position: 0 90px;
}

[state="pushed-down-extra"] ~ .overlay:not([state="active"]) ~ .container .cookies.unit.nav-subs {
  transition-timing-function: cubic-bezier(0, 1, 0.5, 1);
}

[state="pushed-down-extra"] ~ .overlay:not([state="active"]) ~ .container .cookies.unit:not(.no-nav) {
  padding-top: 158px;
  background-position: 0 156px;
}

[state="pushed-right"] ~ .overlay:not([state="active"]) ~ .container .cookies.unit {
  padding-left: 248px;
}

.cookies.unit > div {
  margin: 18px auto;
  max-width: 600px;
  text-align: center;
}

.cookies.unit .policy {
  display: none;
}

.cookies.unit .policy[state="active"] {
  display: block;
}

.cookies.unit .policy .title {
  color: white;
  font-size: 1.25em;
  margin: 0 0 10px 0;
  text-transform: uppercase;
  font-family: 'Title', 'Title Fallback 1', 'Title Fallback 2', sans-serif;
  line-height: 1;
}

.cookies.unit .policy .message {
  color: white;
  font-size: .6em;
  line-height: 1.5;
  margin-bottom: 6px;
}

.cookies.unit .policy .divider {
  display: none;
}

.cookies.unit .policy .link {
  font-size: .6em;
  text-decoration: underline;
  display: inline-block;
}

.cookies.unit .policy .changelink {
  color: #47a742;
  cursor: pointer;
  margin: 0 0 0 2em;
}

.has-cursor .cookies.unit .policy .changelink:hover {
  color: white;
}

.cookies.unit .policy .changelink::after {
  content: "";
  display: block;
  width: 100%;
}

.cookies.unit .policy .policylink {
  color: #fff;
}

.cookies.unit .policy .button {
  display: block;
  font-size: .9em;
  width: auto;
  margin: 16px auto 0;
  min-height: 2.5em;
  line-height: 2.5em;
  box-sizing: border-box;
  box-shadow: inset 0 0 0 0 rgba(255, 255, 255, 0);
  background-color: #005d1f;
  padding: 0 33px;
  color: white;
  font-family: 'Title', 'Title Fallback 1', 'Title Fallback 2', sans-serif;
  text-transform: uppercase;
  transition: background-color .8s, color .1s, box-shadow 0.4s;
}

@media screen and (max-width: 750px) {
  .cookies.unit .policy .button {
    min-width: 7em;
    padding: 0 11px;
  }
}

.cookies.unit .policy .button .text {
  display: inline-block;
  margin-left: 9px;
  font-size: .75em;
  letter-spacing: .05em;
}

@media screen and (max-width: 750px) {
  .cookies.unit .policy .button .text {
    margin-left: 7px;
    font-size: .6em;
    letter-spacing: .07em;
  }
}

.cookies.unit .policy .button .checkmark {
  fill: #fff;
}

.cookies.unit .policy .button svg {
  height: .8em;
  margin-bottom: -1px;
  margin-left: -.5em;
}

@media screen and (max-width: 750px) {
  .cookies.unit .policy .button svg {
    margin-left: 0;
  }
}

.has-cursor .cookies.unit .policy .button:hover {
  box-shadow: inset 0 0 0 4px white;
  background-color: white;
  color: #000000;
}

.has-cursor .cookies.unit .policy .button:hover .checkmark {
  fill: #000;
}

.cookies.unit .settings {
  display: none;
}

.cookies.unit .settings[state="active"] {
  display: block;
}

.cookies.unit .settings .title {
  color: white;
  font-size: 1.25em;
  line-height: 1;
  margin: 0 0 .5em 0;
  text-transform: uppercase;
  font-family: 'Title', 'Title Fallback 1', 'Title Fallback 2', sans-serif;
}

.cookies.unit .settings .message {
  color: white;
  font-size: .7em;
  font-weight: 700;
  line-height: 1.5;
  margin: 1em 0 1.25em;
}

@media screen and (max-width: 750px) {
  .cookies.unit .settings .message {
    font-size: .65em;
    line-height: 1.3077;
  }
}

.cookies.unit .settings .divider {
  display: none;
}

.cookies.unit .settings .text-input {
  font-size: .6em;
  color: white;
  margin-right: 36px;
  line-height: 1.6667;
  margin-left: 30px;
}

@media screen and (max-width: 750px) {
  .cookies.unit .settings .text-input {
    margin-right: 0;
    margin-left: 38px;
    line-height: 19px;
  }
}

.cookies.unit .settings .checkbox {
  width: 75%;
  margin: auto;
  text-align: left;
  position: relative;
}

@media screen and (max-width: 750px) {
  .cookies.unit .settings .checkbox {
    width: 100%;
  }
}

.cookies.unit .settings .checkbox label {
  cursor: pointer;
  display: block;
  color: white;
  font-size: .6em;
  line-height: 1.6666;
  margin-left: 2.5em;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

@media screen and (max-width: 750px) {
  .cookies.unit .settings .checkbox label {
    line-height: 1.5;
    margin-left: 30px;
  }
}

.cookies.unit .settings .checkbox label:before {
  background-color: black;
  border: 2px solid #fff;
}

.cookies.unit .settings .checkbox label span {
  border: 2px solid white;
  width: 1em;
  height: 1em;
  position: absolute;
  left: 0;
  top: .175em;
}

.cookies.unit .settings .checkbox label span:after {
  content: '';
  width: .8em;
  height: .4em;
  position: absolute;
  top: .12em;
  left: .12em;
  border: 2px solid #fcfff4;
  border-top: none;
  border-right: none;
  opacity: 0;
  transform: rotate(-50deg);
}

.cookies.unit .settings .checkbox input[type=checkbox] {
  display: none;
}

.cookies.unit .settings .checkbox input[type=checkbox]:checked + label span:after {
  opacity: 1;
}

.cookies.unit .settings .checkbox1 {
  margin-top: 15px;
}

@media screen and (max-width: 750px) {
  .cookies.unit .settings .checkbox1 {
    margin-top: 15px;
  }
}

.cookies.unit .settings .checkbox1 label span {
  border: 2px solid #858585;
}

.cookies.unit .settings .checkbox1 label span:after {
  border: 2px solid #858585;
  border-top: none;
  border-right: none;
}

.cookies.unit .settings .checkbox2 {
  margin-top: 15px;
}

.cookies.unit .settings .button {
  display: inline-block;
  font-size: .9em;
  min-height: 2.5em;
  line-height: 2.3em;
  margin-top: 1.12em;
  box-sizing: border-box;
  border: 3px solid #fff;
  color: white;
  font-family: 'Title', 'Title Fallback 1', 'Title Fallback 2', sans-serif;
  text-transform: uppercase;
  transition: background-color .8s, color .1s, box-shadow 0.4s;
}

@media screen and (max-width: 750px) {
  .cookies.unit .settings .button {
    min-width: 7em;
    padding: 0;
    font-size: 1.1em;
  }
}

.cookies.unit .settings .button .text {
  display: inline-block;
  letter-spacing: .07em;
  padding: 0 30px;
  font-size: .7em;
  color: white;
}

@media screen and (max-width: 750px) {
  .cookies.unit .settings .button .text {
    font-size: .6em;
    letter-spacing: .07em;
  }
}

.cookies.unit .settings .button .checkmark {
  fill: #fff;
}

.has-cursor .cookies.unit .settings .button:hover {
  box-shadow: inset 0 0 0 4px white;
  background-color: white;
}

.has-cursor .cookies.unit .settings .button:hover .text {
  color: #000000;
}

.has-cursor .cookies.unit .settings .button:hover .checkmark {
  fill: #000;
}

.cookies.unit-modal {
  box-sizing: border-box;
  background: #171C1F;
  width: calc(100vw - 80px);
  max-width: 20em;
  max-height: 100vh;
  border: 3px solid white;
  overflow: auto;
}

@media screen and (min-width: 326px) and (max-width: 750px) {
  .cookies.unit-modal {
    min-width: 16em;
  }
}

@media screen and (max-width: 325px) {
  .cookies.unit-modal {
    min-width: 14em;
  }
}

.cookies.unit-modal > div {
  margin: 60px 18px 48px 37px;
}

@media screen and (min-width: 326px) and (max-width: 750px) {
  .cookies.unit-modal > div {
    margin: 50px 32px 50px 32px;
  }
}

@media screen and (max-width: 325px) {
  .cookies.unit-modal > div {
    margin: 50px 32px 50px 32px;
  }
}

.cookies.unit-modal .policy {
  display: none;
}

.cookies.unit-modal .policy[state="active"] {
  display: block;
}

.cookies.unit-modal .policy .title {
  color: white;
  font-size: 1.25em;
  margin: 0 0 24px 0;
  text-transform: uppercase;
  font-family: 'Title', 'Title Fallback 1', 'Title Fallback 2', sans-serif;
}

@media screen and (max-width: 750px) {
  .cookies.unit-modal .policy .title {
    font-size: 1.2em;
    margin: 15px 0 0 0;
  }
}

.cookies.unit-modal .policy .message {
  color: white;
  font-size: .6em;
  margin-top: 14px;
  line-height: 1.5;
}

@media screen and (max-width: 750px) {
  .cookies.unit-modal .policy .message {
    margin-top: 0px;
    line-height: 1.41666;
  }
}

.cookies.unit-modal .policy .divider {
  width: 57px;
  height: 2px;
  background: white;
  margin-right: auto;
}

@media screen and (max-width: 750px) {
  .cookies.unit-modal .policy .divider {
    width: 29px;
    margin-top: 23px;
    margin-bottom: 13px;
  }
}

.cookies.unit-modal .policy .changelink {
  color: #47a742;
  cursor: pointer;
}

@media screen and (max-width: 750px) {
  .cookies.unit-modal .policy .changelink {
    margin-top: 7px;
  }
}

.has-cursor .cookies.unit-modal .policy .changelink:hover {
  color: white;
}

.cookies.unit-modal .policy .link {
  font-size: .6em;
  text-decoration: underline;
}

.cookies.unit-modal .policy .policylink {
  color: #fff;
}

.cookies.unit-modal .policy .button {
  font-size: .9em;
  margin-top: 1em;
  display: inline-block;
  min-height: 2.5em;
  line-height: 2.5em;
  box-sizing: border-box;
  box-shadow: inset 0 0 0 0px rgba(255, 255, 255, 0);
  background-color: #005d1f;
  padding: 0 33px 0 33px;
  color: white;
  font-family: 'Title', 'Title Fallback 1', 'Title Fallback 2', sans-serif;
  text-transform: uppercase;
  transition: background-color .8s, color .1s, box-shadow 0.4s;
}

@media screen and (max-width: 750px) {
  .cookies.unit-modal .policy .button {
    min-width: 157px;
    padding: 0 11px 0 11px;
  }
}

.cookies.unit-modal .policy .button .text {
  display: inline-block;
  margin-left: 9px;
  font-size: .75em;
  letter-spacing: .05em;
}

@media screen and (max-width: 750px) {
  .cookies.unit-modal .policy .button .text {
    margin-left: 7px;
    font-size: .6em;
    letter-spacing: .05em;
  }
}

.cookies.unit-modal .policy .button .checkmark {
  fill: #fff;
}

.cookies.unit-modal .policy .button svg {
  height: .8em;
  margin-bottom: -1px;
  margin-left: -6px;
}

@media screen and (max-width: 750px) {
  .cookies.unit-modal .policy .button svg {
    margin-left: -10px;
  }
}

.has-cursor .cookies.unit-modal .policy .button:hover {
  box-shadow: inset 0 0 0 4px white;
  background-color: white;
  color: #000000;
}

.has-cursor .cookies.unit-modal .policy .button:hover .checkmark {
  fill: #000;
}

.cookies.unit-modal .settings {
  display: none;
}

.cookies.unit-modal .settings[state="active"] {
  display: block;
}

.cookies.unit-modal .settings .title {
  color: white;
  font-size: 1.25em;
  line-height: 1em;
  margin: 0 0 1em 0;
  text-transform: uppercase;
  font-family: 'Title', 'Title Fallback 1', 'Title Fallback 2', sans-serif;
}

@media screen and (max-width: 750px) {
  .cookies.unit-modal .settings .title {
    font-size: 1.2em;
    font-size: 1.625em;
    margin: 15px 0 0 0;
  }
}

.cookies.unit-modal .settings .message {
  color: white;
  font-size: .7em;
  font-weight: 700;
  line-height: 1.5;
  margin-bottom: 1.25em;
}

@media screen and (max-width: 750px) {
  .cookies.unit-modal .settings .message {
    font-size: .65em;
    margin-top: 0;
    line-height: 1.3077;
  }
}

.cookies.unit-modal .settings .divider {
  width: 57px;
  height: 2px;
  background: white;
  margin-right: auto;
}

@media screen and (max-width: 750px) {
  .cookies.unit-modal .settings .divider {
    width: 29px;
    margin-top: 23px;
    margin-bottom: 13px;
  }
}

.cookies.unit-modal .settings .text-input {
  font-size: .6em;
  color: white;
  margin-right: 36px;
  line-height: 1.6667;
  margin-left: 30px;
}

@media screen and (max-width: 750px) {
  .cookies.unit-modal .settings .text-input {
    margin-right: 0;
    margin-left: 38px;
    line-height: 1.58333;
  }
}

.cookies.unit-modal .settings .checkbox {
  float: left;
  position: relative;
}

.cookies.unit-modal .settings .checkbox label {
  cursor: pointer;
  display: block;
  color: white;
  font-size: .6em;
  line-height: 1.6667;
  margin-left: 2.5em;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

@media screen and (max-width: 750px) {
  .cookies.unit-modal .settings .checkbox label {
    line-height: 18px;
    margin-left: 40px;
  }
}

.cookies.unit-modal .settings .checkbox label:before {
  background-color: black;
  border: 2px solid #fff;
}

.cookies.unit-modal .settings .checkbox label span {
  border: 2px solid white;
  width: 1em;
  height: 1em;
  position: absolute;
  left: 0;
  top: .175em;
}

.cookies.unit-modal .settings .checkbox label span:after {
  content: '';
  width: .8em;
  height: .4em;
  position: absolute;
  top: .12em;
  left: .12em;
  border: 2px solid #fcfff4;
  border-top: none;
  border-right: none;
  opacity: 0;
  transform: rotate(-50deg);
}

.cookies.unit-modal .settings .checkbox input[type=checkbox] {
  display: none;
}

.cookies.unit-modal .settings .checkbox input[type=checkbox]:checked + label span:after {
  opacity: 1;
}

.cookies.unit-modal .settings .checkbox1 {
  margin-top: 30px;
}

@media screen and (max-width: 750px) {
  .cookies.unit-modal .settings .checkbox1 {
    margin-top: 15px;
  }
}

.cookies.unit-modal .settings .checkbox1 label span {
  border: 2px solid #858585;
}

.cookies.unit-modal .settings .checkbox1 label span:after {
  border: 2px solid #858585;
  border-top: none;
  border-right: none;
}

.cookies.unit-modal .settings .checkbox2 {
  margin-top: 60px;
}

.cookies.unit-modal .settings .button {
  font-size: .9em;
  display: inline-block;
  min-height: 2.8889em;
  line-height: 2.8889;
  margin-top: 1.5em;
  box-sizing: border-box;
  border: 3px solid #fff;
  color: white;
  font-family: 'Title', 'Title Fallback 1', 'Title Fallback 2', sans-serif;
  text-transform: uppercase;
  transition: background-color .8s, color .1s, box-shadow 0.4s;
}

@media screen and (max-width: 750px) {
  .cookies.unit-modal .settings .button {
    min-height: 2.5em;
    min-width: 7em;
    font-size: 1.1em;
    padding: 0;
    line-height: 2.5;
  }
}

.cookies.unit-modal .settings .button .text {
  display: inline-block;
  letter-spacing: 0.6px;
  padding: 0px 30px 10px 30px;
  font-size: .7em;
  color: white;
  line-height: 1.4285;
}

@media screen and (max-width: 750px) {
  .cookies.unit-modal .settings .button .text {
    font-size: .6em;
    letter-spacing: .05em;
  }
}

.cookies.unit-modal .settings .button .checkmark {
  fill: #fff;
}

.has-cursor .cookies.unit-modal .settings .button:hover {
  box-shadow: inset 0 0 0 4px white;
  background-color: white;
}

.has-cursor .cookies.unit-modal .settings .button:hover .text {
  color: #000000;
}

.has-cursor .cookies.unit-modal .settings .button:hover .checkmark {
  fill: #000;
}

.cookies--xs {
  font-size: .8325em;
}

.cookies--s {
  font-size: .917em;
}

.cookies--m {
  font-size: 1em;
}

.cookies--l {
  font-size: 1.17em;
}

.cookies--xl {
  font-size: 1.325em;
}

@keyframes cookie-slide {
  0% {
    opacity: 0;
    transform: translateY(-75%);
  }
  85% {
    opacity: 0;
    transform: translateY(-75%);
  }
}

@media screen and (min-width: 751px) {
  .viewport[state="active-cookie"] {
    -moz-filter: blur(2.5px);
    -o-filter: blur(2.5px);
    -ms-filter: blur(2.5px);
    filter: blur(2.5px);
  }
}

.legal.container {
  font-size: 12px;
  font-family: 'Subtitle', 'Default Fallback', sans-serif;
  text-transform: uppercase;
  line-height: 24px;
  background-color: #101417;
  color: #6c6e7b;
}

@media screen and (max-width: 750px) {
  .legal.container {
    text-align: center;
  }
}

.legal.container .unit {
  transform: translate(0, 0);
  padding: 17px 60px;
  margin-left: auto;
  margin-right: auto;
  width: auto;
  max-width: 1220px;
  text-align: left;
  box-sizing: border-box;
}

@media screen and (max-width: 750px) {
  .legal.container .unit {
    padding: 20px;
  }
}

.legal.container .unit h1,
.legal.container .unit h2,
.legal.container .unit h3,
.legal.container .unit p {
  margin: 0;
  color: #6c6e7b;
  text-align: inherit;
}

.legal.container .unit[modifier*="center"] {
  text-align: center;
}

.legal.container .unit[modifier*="bright"] {
  background: #6c6e7b;
  color: white;
}

.legal.container .unit h3 {
  font-size: 14px;
  margin-bottom: 6px;
}

.legal.container .unit a {
  text-decoration: underline;
}

.legal.container[variant="fixed"] {
  position: fixed;
  left: 0;
  bottom: 0;
  right: 0;
  z-index: 6;
  height: 110px;
  width: 100%;
  max-width: 100vw;
  box-sizing: border-box;
  overflow: auto;
}

@media screen and (max-width: 750px) {
  .legal.container[variant="fixed"] {
    height: 100px;
  }
}

.legal.container[variant='hidden'] {
  height: 110px;
  width: 100%;
  max-width: 100vw;
  opacity: 0.00001;
  overflow: hidden;
}

@media screen and (max-width: 750px) {
  .legal.container[variant='hidden'] {
    height: 100px;
  }
}

.viewport[state="pushed-right"] ~ .legal.container[variant='fixed'] {
  padding: 0 0 0 228px;
}

html.lt-ie9 [variant*="mobile"].nav {
  display: none;
}

html.lt-ie9 .nav .logo {
  background: url("/browser-resources/img/logo.png") center no-repeat;
  height: 67px;
  width: 93px;
}

html.lt-ie9 .nav .logo img {
  display: none;
}

html.lt-ie9 .nav .tool {
  width: 55px;
}

html.lt-ie9 .nav .tool a {
  height: 100%;
  width: 100%;
  background: url("/browser-resources/img/icons/home.png") center no-repeat;
  position: absolute;
  right: 0px;
  top: 0px;
}

html.lt-ie9 .close-button {
  height: 55px;
  width: 55px;
}

html.lt-ie9 .close-button a {
  height: 100%;
  width: 100%;
  background: transparent url("/browser-resources/img/icons/close.png") center no-repeat;
  background-color: transparent !important;
}

html.lt-ie9 .close-button span {
  display: none;
}

html.lt-ie9 .gateway .logo, html.lt-ie9 .gateway-message .logo {
  background: url("/browser-resources/img/logo.png") center no-repeat;
  height: 67px;
  width: 100%;
}

html.lt-ie9 .gateway .logo img, html.lt-ie9 .gateway-message .logo img {
  display: none;
}

html.lt-ie9 .container.gateway-message [variant*=""].button {
  border: 3px solid #fff;
}

html.lt-ie9 .container.gateway-message [variant*="positive"].button {
  border: 3px solid #47a742;
}

html.lt-ie9 .container.gateway-message [variant*="negative"].button {
  border: 3px solid #c52118;
}

html.lt-ie9 .rtf .button-black-transparent, html.lt-ie9 .rtf .button-black-transparent-border {
  background-color: #171c1f;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=80)";
  filter: alpha(opacity=80);
}

html.lt-ie9 .rtf .button-black-transparent-border, html.lt-ie9 .rtf .button-transparent-border {
  border: 3px solid #fff;
}

html.lt-ie9 .rtf .button-black-transparent:hover,
html.lt-ie9 .rtf .button-black-transparent-border:hover,
html.lt-ie9 .rtf .button-transparent-border:hover {
  background: #fff;
}

html.lt-ie9 [variant*=""].trigger .link {
  background-color: #171c1f;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
  filter: alpha(opacity=0);
}

html.lt-ie9 .container .faq .unit.list .title {
  background: transparent;
}

html.lt-ie9 .container .faq .list[state*=""] button {
  background: transparent url("/browser-resources/img/icons/plus.png") center no-repeat;
}

html.lt-ie9 .container .faq .list[state*="active"] button {
  background: transparent url("/browser-resources/img/icons/min.png") center no-repeat;
}

html.lt-ie9 .nav[variant*="side"] .logo {
  width: 100%;
}

html.lt-ie9 .nav[variant*="side"] .follow span[variant*="hidden"] {
  display: block;
}

html.lt-ie9 .nav[variant*="top"][state*="up"][state*="active"], html.lt-ie9 .nav[variant*="top"][state*="down"][state*="active"] {
  top: 0 !important;
}

html.lt-ie9 .nav[variant*="top"] .secondary.bar {
  top: 0 !important;
}

html.lt-ie9 [variant*="top"][variant*="sub"][state*="down"][state*="active"].nav .menu[variant*="horizontal"] li {
  line-height: 30px !important;
}

html.lt-ie9 .cookies.unit {
  margin: 0 auto;
  position: absolute;
  left: 50%;
  top: 50%;
  margin-left: -155px;
  margin-top: -155px;
}

html.lt-ie9 .full-viewport.container [variant*="image"].full-viewport.unit img {
  top: 0;
}

html.lt-ie9 .full-viewport.container .full-viewport-socials .social-link {
  background: #000;
}

html.lt-ie9 .container.product .menu.unit UL LI A:hover div {
  border: none;
  margin: 0;
}

html.lt-ie9 .container.product .menu.unit UL LI A:hover span {
  display: block;
}

html.lt-ie9 .product-list.container {
  height: 1000px;
}

html.lt-ie9 .product-list.container .carousel {
  visibility: collapse;
  position: absolute;
  left: -9000px;
}

html.lt-ie9 .product-list.container .menu .icon-block img {
  display: none;
}

html.lt-ie9 .product-list.container .icon {
  display: none;
}

html.lt-ie9 .product-list.container .title-block {
  margin-top: 300px;
}

html.lt-ie9 .product-list.container .background[state="zoom"] .bg.normal {
  display: none;
}

html.lt-ie9 .product-list.container .background[state="normal"] .bg.zoom {
  display: none;
}

html.lt-ie9 .product-list.container .background .image {
  height: 1000px;
}

html.lt-ie9 .product-list.container .background .image .normal {
  height: 1000px;
}

html.lt-ie9 .product-list.container .background .image .zoom {
  height: 1000px;
}

html.lt-ie10 .cookies.unit {
  margin: 0 auto;
  position: absolute;
  left: 50%;
  top: 50%;
  margin-left: -155px;
  margin-top: -155px;
}

html.lt-ie10 .gateway .container.input[variant*="country"] select {
  display: block;
  color: white;
  border: 3px solid white;
  background: #0b0e10;
  margin: 0 auto;
}

html.lt-ie10 .gateway .container.input[variant*="country"] input {
  display: none;
}

html.lt-ie9 .legal.container[variant='hidden'] {
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
  filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=0);
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
