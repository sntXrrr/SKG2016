/* normalize.css v3.0.2 | MIT License | git.io/normalize */
/*
* 1. Set default font family to sans-serif.
* 2. Prevent iOS text size adjust after orientation change, without disabling
*    user zoom.
*/
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/*
* Remove default margin.
*/
body {
  margin: 0;
}

/* HTML5 display definitions
========================================================================== */
/*
* Correct `block` display not defined for any HTML5 element in IE 8/9.
* Correct `block` display not defined for `details` or `summary` in IE 10/11
* and Firefox.
* Correct `block` display not defined for `main` in IE 11.
*/
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/*
* 1. Correct `inline-block` display not defined in IE 8/9.
* 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
*/
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/*
* Prevent modern browsers from displaying `audio` without controls.
* Remove excess height in iOS 5 devices.
*/
audio:not([controls]) {
  display: none;
  height: 0;
}

/*
* Address `[hidden]` styling not present in IE 8/9/10.
* Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
*/
[hidden],
template {
  display: none;
}

/* Links
========================================================================== */
/*
* Remove the gray background color from active links in IE 10.
*/
a {
  background-color: transparent;
}

/*
* Improve readability when focused and also mouse hovered in all browsers.
*/
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
========================================================================== */
/*
* Address styling not present in IE 8/9/10/11, Safari, and Chrome.
*/
abbr[title] {
  border-bottom: 1px dotted;
}

/*
* Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
*/
b,
strong {
  font-weight: bold;
}

/*
* Address styling not present in Safari and Chrome.
*/
dfn {
  font-style: italic;
}

/*
* Address variable `h1` font-size and margin within `section` and `article`
* contexts in Firefox 4+, Safari, and Chrome.
*/
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/*
* Address styling not present in IE 8/9.
*/
mark {
  background: #ff0;
  color: #000;
}

/*
* Address inconsistent and variable font size in all browsers.
*/
small {
  font-size: 80%;
}

/*
* Prevent `sub` and `sup` affecting `line-height` in all browsers.
*/
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
========================================================================== */
/*
* Remove border when inside `a` element in IE 8/9/10.
*/
img {
  border: 0;
}

/*
* Correct overflow not hidden in IE 9/10/11.
*/
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
========================================================================== */
/*
* Address margin not present in IE 8/9 and Safari.
*/
figure {
  margin: 1em 40px;
}

/*
* Address differences between Firefox and other browsers.
*/
hr {
  box-sizing: content-box;
  height: 0;
}

/*
* Contain overflow in all browsers.
*/
pre {
  overflow: auto;
}

/*
* Address odd `em`-unit font size rendering in all browsers.
*/
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
========================================================================== */
/*
* Known limitation: by default, Chrome and Safari on OS X allow very limited
* styling of `select`, unless a `border` property is set.
*/
/*
* 1. Correct color not being inherited.
*    Known issue: affects color of disabled elements.
* 2. Correct font properties not being inherited.
* 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
*/
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/*
* Address `overflow` set to `hidden` in IE 8/9/10/11.
*/
button {
  overflow: visible;
}

/*
* Address inconsistent `text-transform` inheritance for `button` and `select`.
* All other form control elements do not inherit `text-transform` values.
* Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
* Correct `select` style inheritance in Firefox.
*/
button,
select {
  text-transform: none;
}

/*
* 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
*    and `video` controls.
* 2. Correct inability to style clickable `input` types in iOS.
* 3. Improve usability and consistency of cursor style between image-type
*    `input` and others.
*/
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/*
* Re-set default cursor for disabled elements.
*/
button[disabled],
html input[disabled] {
  cursor: default;
}

/*
* Remove inner padding and border in Firefox 4+.
*/
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/*
* Address Firefox 4+ setting `line-height` on `input` using `!important` in
* the UA stylesheet.
*/
input {
  line-height: normal;
}

/*
* It's recommended that you don't attempt to style these elements.
* Firefox's implementation doesn't respect box-sizing, padding, or width.
*
* 1. Address box sizing set to `content-box` in IE 8/9/10.
* 2. Remove excess padding in IE 8/9/10.
*/
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/*
* Fix the cursor style for Chrome's increment/decrement buttons. For certain
* `font-size` values of the `input`, it causes the cursor style of the
* decrement button to change from `default` to `text`.
*/
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/*
* 1. Address `appearance` set to `searchfield` in Safari and Chrome.
* 2. Address `box-sizing` set to `border-box` in Safari and Chrome
*    (include `-moz` to future-proof).
*/
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box;
}

/*
* Remove inner padding and search cancel button in Safari and Chrome on OS X.
* Safari (but not Chrome) clips the cancel button when the search input has
* padding (and `textfield` appearance).
*/
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
* Define consistent border, margin, and padding.
*/
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/*
* 1. Correct `color` not being inherited in IE 8/9/10/11.
* 2. Remove padding so people aren't caught out if they zero out fieldsets.
*/
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/*
* Remove default vertical scrollbar in IE 8/9/10/11.
*/
textarea {
  overflow: auto;
}

/*
* Don't inherit the `font-weight` (applied by a rule above).
* NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
*/
optgroup {
  font-weight: bold;
}

/* Tables
========================================================================== */
/*
* Remove most spacing between table cells.
*/
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

@font-face {
  font-family: 'Body Fallback';
  src: local("Arial");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Title';
  src: url("/browser-resources/fonts/futura/futura-condensed-bold.eot");
  src: url("/browser-resources/fonts/futura/futura-condensed-bold.eot?#iefix") format("embedded-opentype"), url("/browser-resources/fonts/futura/futura-condensed-bold.woff2") format("woff2"), url("/browser-resources/fonts/futura/futura-condensed-bold.woff") format("woff"), url("/browser-resources/fonts/futura/futura-condensed-bold.ttf") format("truetype"), url("/browser-resources/fonts/futura/futura-condensed-bold.svg#futura-condensed-bold") format("svg");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Title Fallback 1';
  src: local("Arial Black");
  font-weight: 700;
  font-style: normal;
}

@font-face {
  font-family: 'Title Fallback 2';
  src: local("Verdana");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Subtitle';
  src: url("/browser-resources/fonts/futura/futura-condensed.eot");
  src: url("/browser-resources/fonts/futura/futura-condensed.eot?#iefix") format("embedded-opentype"), url("/browser-resources/fonts/futura/futura-condensed.woff2") format("woff2"), url("/browser-resources/fonts/futura/futura-condensed.woff") format("woff"), url("/browser-resources/fonts/futura/futura-condensed.ttf") format("truetype"), url("/browser-resources/fonts/futura/futura-condensed.svg#futura-condensed") format("svg");
  font-weight: normal;
  font-style: normal;
}

[hidden] {
  display: none;
}

.visually-hidden {
  position: absolute;
  clip: rect(0, 0, 0, 0);
}

.is-sticky {
  position: fixed !important;
  z-index: 25;
}

@viewport {
  zoom: 1.0;
  width: device-width;
  height: device-height;
}

@-ms-viewport {
  zoom: 1.0;
  width: device-width;
  height: device-height;
}

html {
  overflow-x: hidden;
  overflow-y: scroll;
  -webkit-overflow-scrolling: touch;
  /* scrollbars in IE */
  scrollbar-base-color: #1a2024;
  scrollbar-face-color: #4e5162;
  scrollbar-track-color: #1a2024;
  scrollbar-3dlight-color: #4e5162;
  scrollbar-highlight-color: #4e5162;
  scrollbar-arrow-color: #4e5162;
  scrollbar-darkshadow-color: #4e5162;
  scrollbar-shadow-color: #4e5162;
  /* webkit scrollbar styling */
}

html ::-webkit-scrollbar {
  background: #141a1e;
}

html ::-webkit-scrollbar-track {
  background: transparent;
}

html ::-webkit-scrollbar-thumb {
  background: #4e5162;
}

html ::-webkit-scrollbar-thumb:hover {
  background: #c3c3ce;
}

html body {
  position: relative;
  min-height: 100%;
  min-width: 320px;
  line-height: 1.42857;
  max-width: 100%;
  font-family: 'Noto Sans', 'Body Fallback', sans-serif;
  font-size: 20px;
  touch-action: pan-y;
  -webkit-overflow-scrolling: touch;
  -ms-overflow-style: -ms-autohiding-scrollbar;
  -ms-touch-action: pan-y;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

html body.windows-phone {
  height: 100vh;
}

html.no-scrolling {
  overflow: hidden;
  touch-action: none;
  -webkit-overflow-scrolling: auto;
  -ms-overflow-style: none;
  -ms-touch-action: none;
}

html.no-scrolling body {
  max-height: 100vh;
  -ms-touch-action: none;
      touch-action: none;
}

@media screen and (max-width: 750px) {
  html.no-scrolling body.new-android {
    overflow: hidden;
    overflow-y: hidden;
    overflow-x: hidden;
  }
}

html.no-scrolling body.windows-phone {
  overflow-y: hidden;
}

a,
a:active,
a:visited {
  color: inherit;
  text-decoration: none;
}

a:hover {
  text-decoration: none;
}

h1 {
  font-size: 26px;
  color: #fff;
  font-weight: normal;
}

h2 {
  font-size: 20px;
  font-weight: normal;
  line-height: 14px;
}

h3 {
  font-size: 16px;
  font-weight: normal;
}

fieldset {
  margin: 0;
  padding: 0;
  border: 0;
}

input[type="text"],
input[type="password"],
input[type="email"],
input[type="url"],
input[type="date"],
input[type="month"],
input[type="time"],
input[type="datetime"],
input[type="datetime-local"],
input[type="week"],
input[type="number"],
input[type="search"],
input[type="country"],
input[type="tel"],
input[type="color"],
select,
textarea {
  box-sizing: border-box;
  height: 41px;
  line-height: 41px;
  display: inline-block;
  border: 0;
  padding: 0 0.8em 0 0.8em;
  background-color: rgba(0, 0, 0, 0.35);
}

textarea {
  resize: none;
}

ol, ul {
  margin: 0;
  padding: 0;
}

ol li, ul li {
  padding: 0;
}

button {
  border: 0;
  background: transparent;
}

hr {
  border: 0 none;
  border-top: 1px solid #101417;
  margin: 0;
  padding: 0;
  height: 0;
  overflow: hidden;
}

[visible] {
  transition-property: opacity, transform;
  transition-timing-function: ease-out;
  transition-delay: 0, 0;
  transition-duration: .5s, .5s !important;
  opacity: 0 !important;
  transform: translateY(20px) !important;
}

[visible]:nth-child(1) {
  transition-delay: 0.4s, 0.4s;
}

[visible]:nth-child(2) {
  transition-delay: 0.8s, 0.8s;
}

[visible]:nth-child(3) {
  transition-delay: 1.2s, 1.2s;
}

[visible]:nth-child(4) {
  transition-delay: 1.6s, 1.6s;
}

[visible]:nth-child(5) {
  transition-delay: 2s, 2s;
}

[visible]:nth-child(6) {
  transition-delay: 2.4s, 2.4s;
}

[visible]:nth-child(7) {
  transition-delay: 2.8s, 2.8s;
}

[visible]:nth-child(8) {
  transition-delay: 3.2s, 3.2s;
}

[visible]:nth-child(9) {
  transition-delay: 3.6s, 3.6s;
}

[visible]:nth-child(10) {
  transition-delay: 4s, 4s;
}

[visible]:nth-child(11) {
  transition-delay: 4.4s, 4.4s;
}

[visible]:nth-child(12) {
  transition-delay: 4.8s, 4.8s;
}

[visible]:nth-child(13) {
  transition-delay: 5.2s, 5.2s;
}

[visible]:nth-child(14) {
  transition-delay: 5.6s, 5.6s;
}

[visible]:nth-child(15) {
  transition-delay: 6s, 6s;
}

[visible]:nth-child(16) {
  transition-delay: 6.4s, 6.4s;
}

[visible]:nth-child(17) {
  transition-delay: 6.8s, 6.8s;
}

[visible]:nth-child(18) {
  transition-delay: 7.2s, 7.2s;
}

[visible]:nth-child(19) {
  transition-delay: 7.6s, 7.6s;
}

[visible]:nth-child(20) {
  transition-delay: 8s, 8s;
}

[visible="true"] {
  opacity: 1 !important;
  transform: translateY(0) !important;
}

[visible="false"] {
  opacity: 0 !important;
  transition-duration: .1s, .1s !important;
  transform: translateY(20px) !important;
}

svg.icon {
  vertical-align: middle;
}

svg.icon .text {
  fill: #454750;
  transition: fill .1s;
}

svg.icon .background {
  fill: transparent;
  transition: fill 1s;
}

.has-cursor svg.icon:hover .text {
  fill: #cfcfdb;
}

.has-cursor svg.icon:hover .background {
  fill: #171c1f;
}

svg.icon[variant*="negative"] .text {
  fill: #cfcfdb;
}

svg.icon[variant*="negative"] .background {
  fill: rgba(16, 20, 23, 0.8);
}

.has-cursor svg.icon[variant*="negative"]:hover .text {
  fill: #0b0e10;
}

.has-cursor svg.icon[variant*="negative"]:hover .background {
  fill: #ffffff;
}

svg.icon[variant*="switch"] .text {
  opacity: 0;
  transition: fill 0.1s, opacity 0.5s;
}

.carousel-slider {
  position: relative;
  display: block;
  box-sizing: border-box;
  -moz-box-sizing: border-box;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -ms-touch-action: pan-y;
  touch-action: pan-y;
  -webkit-tap-highlight-color: transparent;
}

.carousel-list {
  position: relative;
  overflow: hidden;
  display: block;
  margin: 0;
  padding: 0;
}

.carousel-list:focus {
  outline: none;
}

.carousel-list.dragging {
  cursor: pointer;
  cursor: hand;
}

.carousel-slider .carousel-track,
.carousel-slider .carousel-list {
  transform: translate3d(0, 0, 0);
}

.carousel-track {
  position: relative;
  left: 0;
  top: 0;
  display: block;
}

.carousel-track:before, .carousel-track:after {
  content: "";
  display: table;
}

.carousel-track:after {
  clear: both;
}

.carousel-loading .carousel-track {
  visibility: hidden;
}

.carousel-slide {
  height: 100%;
  min-height: 1px;
  display: none;
}

[dir="rtl"] .carousel-slide {
  float: right;
}

.carousel-slide img {
  display: block;
}

.carousel-slide.carousel-loading img {
  display: none;
}

.carousel-slide.dragging img {
  pointer-events: none;
}

.carousel-initialized .carousel-slide {
  display: block;
}

.carousel-loading .carousel-slide {
  visibility: hidden;
}

.carousel-vertical .carousel-slide {
  display: block;
  height: auto;
  border: 1px solid transparent;
}

.carousel-dots {
  position: relative;
  list-style: none;
  display: block;
  text-align: center;
  padding: 20px 0;
  line-height: 1em;
  width: 100%;
}

.carousel-dots li {
  position: relative;
  display: inline-block;
  height: 24px;
  width: 24px;
  margin: 0;
  padding: 0;
  cursor: pointer;
  vertical-align: top;
}

.carousel-dots li button {
  border: 0;
  display: block;
  position: relative;
  height: 24px;
  width: 24px;
  outline: none;
  line-height: 24px;
  padding: 0;
  font-size: 0;
  margin: 0px;
  cursor: pointer;
  box-sizing: border-box;
}

.carousel-dots li button:after {
  content: '';
  display: block;
  position: absolute;
  top: 6px;
  left: 6px;
  width: 12px;
  height: 12px;
  background: #9898ab;
  border-radius: 50%;
  opacity: 1;
}

.windows-phone .carousel-dots li button:after {
  opacity: 1 !important;
}

.has-cursor .carousel-dots li button:after:hover,
.has-cursor .carousel-dots li button:after:focus {
  outline: none;
  opacity: 1;
}

.carousel-dots li.carousel-active button:after {
  background: #ffffff;
  opacity: 1;
}

.carousel-unit {
  position: relative;
  overflow: hidden;
  background-color: lightgray;
  z-index: 6;
  margin: 0 8px;
  transform: translate(0, 0);
}

.carousel-unit a {
  display: block;
}

.carousel-unit .content {
  padding-top: 100%;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -moz-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -ms-flex-align: center;
  -moz-align-items: center;
  align-items: center;
  -ms-flex-pack: center;
  -moz-justify-content: center;
  justify-content: center;
  padding: 0 8px;
  height: 45px;
  background: #005d1f;
}

.iOS.safari .carousel-unit .content {
  height: 42px;
  line-height: 42px;
  padding-top: 3px;
}

.carousel-unit .content h2 {
  margin: 0;
  text-align: center;
  color: white;
  font-size: 14px;
}

.carousel-unit .background {
  position: relative;
}

.carousel-unit .background img {
  width: 100%;
  height: auto;
  object-fit: cover;
}

body {
  background-color: #141a1e;
}

.viewport {
  z-index: 2;
  position: relative;
  box-sizing: border-box;
  min-height: 100vh;
  width: 100%;
  max-width: 100vw;
  padding: 0;
  border: 0 solid transparent;
  margin: 0 auto;
  opacity: 1;
  transition: opacity 0.5s linear;
}

.viewport > .container {
  margin-left: auto;
  margin-right: auto;
  max-width: 100%;
  position: relative;
  z-index: 3;
}

.viewport > .container:nth-child(1) {
  z-index: 12;
}

.viewport > .container:nth-child(2) {
  z-index: 11;
}

.viewport > .container:nth-child(3) {
  z-index: 10;
}

.viewport > .container:nth-child(4) {
  z-index: 9;
}

.viewport > .container:nth-child(5) {
  z-index: 8;
}

.viewport > .container:nth-child(6) {
  z-index: 7;
}

.viewport > .container:nth-child(7) {
  z-index: 6;
}

.viewport > .container:nth-child(8) {
  z-index: 5;
}

.viewport > .container:nth-child(9) {
  z-index: 4;
}

.viewport > .container:nth-child(10) {
  z-index: 3;
}

.viewport > .background.container {
  z-index: 2;
}

.loading .viewport {
  visibility: collapse !important;
  opacity: 0 !important;
  transition: opacity 1s linear;
}

.viewport[state~="pushed-down"]:before {
  content: ' ';
  display: block;
  padding-top: 90px;
}

@media screen and (max-width: 750px) {
  .viewport[state~="pushed-down"]:before {
    padding-top: 110px;
  }
}

.viewport[state~="pushed-down-extra"]:before {
  content: ' ';
  display: block;
  padding-top: 156px;
}

.viewport[state*="pushed-right"] {
  border-left-width: 228px;
}

.viewport[state*="pushed-right pushed-down-less"] {
  border-left-width: 228px;
}

.viewport[state*="pushed-right pushed-down-less"]:before {
  content: ' ';
  display: block;
  padding-top: 66px;
}

.viewport[state*="pushed-left"] {
  opacity: 0.2;
}

.viewport[state*="pushed-up"] {
  border-bottom-width: 240px;
}

.viewport[variant="stage"] {
  z-index: 1;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  opacity: 0;
}

.viewport[variant="stage"][state="active"] {
  opacity: 1;
}

.viewport[variant="size"] {
  z-index: 1;
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
  height: 100vh;
}

.viewport[variant="live"] {
  z-index: 2;
  position: relative;
}

.viewport[variant*='overlay'] {
  display: none;
}

.viewport[variant*='overlay'][state*='active'] {
  display: block;
  z-index: 3;
}

[building-page] .viewport > *:not(.background):not(.hero),
[building-page] .viewport .hero .content {
  opacity: 0;
}

.nav.unit {
  position: fixed;
  z-index: 8;
}

.nav.unit::-webkit-scrollbar {
  width: 12px;
}

.nav.unit .carousel-slide {
  float: left;
}

.nav.unit .bar {
  position: relative;
}

.nav.unit .menu[variant*="vertical"] {
  list-style: none;
  text-transform: uppercase;
}

.nav.unit .menu[variant*="vertical"] a,
.nav.unit .menu[variant*="vertical"] div {
  transition: .5s;
}

.nav.unit .menu[variant*="vertical"] > li {
  font-size: 16px;
  font-family: 'Title', 'Title Fallback 1', 'Title Fallback 2', sans-serif;
  color: #9898ab;
}

.nav.unit .menu[variant*="vertical"] > li > a,
.nav.unit .menu[variant*="vertical"] > li > div {
  display: block;
  line-height: 24px;
  padding: 22px 10px;
  letter-spacing: -0.2px;
  text-align: center;
  cursor: pointer;
}

.has-cursor .nav.unit .menu[variant*="vertical"] > li > a:hover,
.has-cursor .nav.unit .menu[variant*="vertical"] > li > div:hover,
.nav.unit .menu[variant*="vertical"] > li[state*="active"] > a,
.nav.unit .menu[variant*="vertical"] > li[state*="active"] > div {
  background: #14181c;
  color: white;
}

.nav.unit .menu[variant*="horizontal"] {
  z-index: 2;
  list-style: none;
  display: block;
  white-space: nowrap;
  text-align: center;
  height: 66px;
  overflow: hidden;
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
}

.nav.unit .menu[variant*="horizontal"] > li {
  height: 100%;
  display: inline-block;
  box-sizing: border-box;
  margin: 0 -3px;
  line-height: 66px;
}

.has-cursor .nav.unit .menu[variant*="horizontal"] > li:hover, .nav.unit .menu[variant*="horizontal"] > li[state="active"] {
  background: #171d21;
}

.has-cursor .nav.unit .menu[variant*="horizontal"] > li:hover > a, .nav.unit .menu[variant*="horizontal"] > li[state="active"] > a {
  color: white;
}

.nav.unit .menu[variant*="horizontal"] > li > a {
  display: inline-block;
  padding: 5px 28px;
  line-height: 19px;
  text-transform: uppercase;
  font-family: 'Title', 'Title Fallback 1', 'Title Fallback 2', sans-serif;
  color: #9898ab;
  font-size: 16px;
}

.nav.unit .menu .menu.menu {
  overflow: hidden;
}

.nav.unit .menu .menu.menu,
.nav.unit .menu .menu > li, .nav.unit .menu .menu > li > a {
  background-color: #1c2125;
  font-family: 'Subtitle', 'Default Fallback', sans-serif;
  line-height: 20px;
  letter-spacing: 0;
  margin-top: 0;
  transition: max-height 0.9s cubic-bezier(0, 1, 0.5, 1);
}

.nav.unit .menu .menu > li > a {
  display: block;
  text-align: center;
  padding: 11px 10px;
}

.nav.unit .menu .menu > li:first-child a {
  padding-top: 22px;
}

.nav.unit .menu .menu > li:last-child a {
  padding-bottom: 22px;
}

.nav.unit .menu .menu > li[state*="active"] > a, .nav.unit .menu .menu > li a:hover {
  color: white;
}

.nav.unit .menu li[state*="active"] > .menu {
  max-height: 800px;
}

.nav.unit .menu li:not([state*="active"]) > .menu {
  max-height: 0 !important;
}

.nav.unit .menu li > * > .icon {
  display: inline-block;
  margin-right: 7px;
  width: auto;
  height: 24px;
}

@media screen and (max-width: 750px) {
  .nav.unit .menu li > * > .icon {
    margin: -4px 0 0 7px;
  }
}

.nav.unit .follow {
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
  -moz-align-items: center;
  align-items: center;
  -ms-flex-pack: center;
  -moz-justify-content: center;
  justify-content: center;
  text-align: center;
}

.nav.unit .follow span[variant*="hidden"] {
  display: none;
  font-size: 17px;
  font-family: 'Title', 'Title Fallback 1', 'Title Fallback 2', sans-serif;
  color: white;
  padding: 5px;
  text-align: center;
  text-transform: uppercase;
}

.nav.unit .follow a svg.icon .text {
  fill: #6c6e7b;
}

.has-cursor .nav.unit .follow a svg.icon:hover .text {
  fill: white;
}

.has-cursor .nav.unit .follow a svg.icon:hover .background {
  fill: #14181c;
}

.nav[variant*="side"] {
  top: 0;
  bottom: 0;
  left: 0;
  width: 228px;
  background-color: #101417;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -moz-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -ms-flex-align: start;
  -moz-align-items: flex-start;
  align-items: flex-start;
  -ms-flex-pack: center;
  -moz-justify-content: center;
  justify-content: center;
  overflow: hidden;
  -webkit-overflow-scrolling: touch;
  transition: transform 0.9s cubic-bezier(0, 1, 0.5, 1);
  transform: translateX(-228px);
}

.nav[variant*="side"][state="active"] {
  transform: translateX(0);
  overflow: auto;
}

.nav[variant*="side"] .logo {
  -ms-flex-item-align: start;
  align-self: flex-start;
  display: block;
  padding: 25px 0 25px 0;
  text-align: center;
  background-color: transparent;
}

.nav[variant*="side"] .logo img {
  width: 98px;
  height: 70px;
  display: inline-block;
}

.nav[variant*="side"] .top {
  -ms-flex-item-align: start;
  align-self: flex-start;
  width: 100%;
}

.nav[variant*="side"] .bottom {
  width: 100%;
  -ms-flex-item-align: end;
  align-self: flex-end;
}

.nav[variant*="side"] .follow {
  width: 100%;
  padding: 26px 0;
}

.nav[variant*="side"] .menu[variant*="vertical"] {
  margin-top: 15px;
}

.nav[variant*="side"] .menu[variant*="vertical"] .menu {
  transition-delay: .4s;
  transition-duration: 1.35s;
}

@media screen and (max-width: 750px) {
  .nav[variant*="mobile"] {
    top: 0;
    right: 0;
    bottom: 0;
    width: 80%;
    background-color: #0b0e10;
    transform: translateX(101%);
    z-index: 15;
    overflow: hidden;
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
    transition: transform 0.9s cubic-bezier(0, 1, 0.5, 1);
  }
  .old-android .nav[variant*="mobile"] {
    display: none;
  }
  .lt-ie10 .nav[variant*="mobile"] {
    right: -80%;
  }
}

@media screen and (min-width: 751px) {
  .nav[variant*="mobile"] {
    display: none;
  }
}

.not-android .nav[variant*="mobile"] .carousel,
.new-android .nav[variant*="mobile"] .carousel {
  margin: 30px 15px 0 15px;
}

.not-android .nav[variant*="mobile"] .carousel .carousel-unit .content h2,
.new-android .nav[variant*="mobile"] .carousel .carousel-unit .content h2 {
  font-family: 'Title', 'Title Fallback 1', 'Title Fallback 2', sans-serif;
  text-transform: uppercase;
}

.not-android .nav[variant*="mobile"] .carousel .carousel-dots,
.new-android .nav[variant*="mobile"] .carousel .carousel-dots {
  padding-bottom: 30px;
}

.old-android .nav[variant*="mobile"] .carousel {
  display: none !important;
}

.nav[variant*="mobile"] .follow {
  -ms-flex-pack: start;
  -moz-justify-content: flex-start;
  justify-content: flex-start;
  padding: 56px 13px;
}

.not-android .nav[variant*="mobile"][state="active"],
.new-android .nav[variant*="mobile"][state="active"] {
  transform: translateX(0);
}

.old-android .nav[variant*="mobile"][state="active"] {
  display: block;
}

.lt-ie10 .nav[variant*="mobile"][state="active"] {
  right: -0%;
}

.nav[variant*="mobile"] .menu[variant*="vertical"] > li > a,
.nav[variant*="mobile"] .menu[variant*="vertical"] > li > div {
  padding-left: 23px;
  padding-right: 23px;
  text-align: left;
}

.nav[variant*="mobile"] .menu[variant*="vertical"] > li .menu {
  font-size: 16px;
  transition-delay: 0s;
}

.nav[variant*="mobile"] .menu[variant*="vertical"] > li .menu [state="active"] a {
  background-color: #1c2125;
  color: white;
}

.nav[variant*="mobile"] .menu[variant*="vertical"] > li .menu a {
  padding-left: 46px;
  text-align: left;
}

.nav[variant*="top"] {
  position: fixed;
  top: -90px;
  right: 0;
  left: 0;
  width: 100%;
  background: transparent;
  transition: top 0.3s ease-out, opacity 0.5s linear 0.3s;
}

.nav[variant*="top"] .bar.main {
  height: 90px;
  background-color: transparent;
  transition: background-color 0.5s linear 0.3s;
}

.nav[variant*="top"] .logo {
  z-index: 9;
  position: absolute;
  left: 33px;
  top: 12px;
  bottom: 12px;
  transition: transform 0.9s cubic-bezier(0, 1, 0.5, 1), opacity 0.5s linear 0.3s;
}

.nav[variant*="top"] .logo img {
  height: 100%;
  width: 80px;
  float: left;
}

.nav[variant*="top"] .tool {
  z-index: 13;
  position: fixed;
  top: 18px;
  right: 23px;
  height: 55px;
  visibility: collapse;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
  -moz-align-items: center;
  align-items: center;
  -ms-flex-pack: center;
  -moz-justify-content: center;
  justify-content: center;
  -webkit-backface-visibility: hidden;
}

@media screen and (min-width: 751px) {
  .nav[variant*="top"] .tool .arrow {
    opacity: 1;
  }
}

@media screen and (max-width: 750px) {
  .nav[variant*="top"] .tool .bars {
    opacity: 1;
  }
}

.has-cursor .nav[variant*="top"] .tool:hover .background {
  fill: white;
}

.has-cursor .nav[variant*="top"] .tool:hover .text {
  fill: #0b0e10;
}

.nav[variant*="top"] .title {
  margin: 0 125px;
  overflow: auto;
  height: 100%;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
  -moz-align-items: center;
  align-items: center;
  -ms-flex-pack: center;
  -moz-justify-content: center;
  justify-content: center;
  transition: transform 0.9s cubic-bezier(0, 1, 0.5, 1), opacity 0.5s linear 0.3s;
  font-family: 'Title', 'Title Fallback 1', 'Title Fallback 2', sans-serif;
  font-size: 20px;
  text-transform: uppercase;
  text-align: center;
}

.nav[variant*="top"] .title span {
  color: #cfcfdb;
  line-height: 26px;
  display: inline-block;
  letter-spacing: 0.3px;
}

@media screen and (max-width: 750px) {
  .nav[variant*="top"] .title {
    display: none;
  }
}

.nav[variant*="top"][state*="active"] {
  top: 0 !important;
  background: #0b0e10;
  transition: top 0.3s ease-out, opacity 0.5s linear 0.3s;
}

.nav[variant*="top"][state*="active"] .tool {
  visibility: visible;
}

.nav[variant*="top"][state*="active"] .bar.main {
  background-color: #101417;
}

.nav[variant*="top"][state*="up"][state*="active"], .nav[variant*="top"][state*="down"][state*="active"] {
  top: -90px !important;
}

@media screen and (min-width: 751px) {
  .nav[variant="sub"],
  .nav[variant*="top"][variant*="sub"] {
    top: -156px;
  }
  .nav[variant="sub"] .bar.secondary,
  .nav[variant*="top"][variant*="sub"] .bar.secondary {
    z-index: 11;
    height: 66px;
    line-height: 66px;
    top: 0;
    background: #14181c;
    transition: top 0.3s cubic-bezier(0, 1, 0.5, 1), height 0.3s cubic-bezier(0, 1, 0.5, 1), line-height 0.3s cubic-bezier(0, 1, 0.5, 1), transform 0.9s cubic-bezier(0, 1, 0.5, 1), opacity 0.5s linear 0.3s;
  }
  .nav[variant="sub"] .menu[variant*="horizontal"],
  .nav[variant*="top"][variant*="sub"] .menu[variant*="horizontal"] {
    z-index: 2;
    height: 100%;
    width: 100%;
    position: absolute;
    left: 0;
    top: 0;
  }
  .nav[variant="sub"] .menu[variant*="horizontal"] li,
  .nav[variant*="top"][variant*="sub"] .menu[variant*="horizontal"] li {
    transition: line-height 0.3s cubic-bezier(0, 1, 0.5, 1), height 0.3s cubic-bezier(0, 1, 0.5, 1);
    transition: background .5s;
  }
  .nav[variant="sub"] .menu[variant*="horizontal"] a,
  .nav[variant*="top"][variant*="sub"] .menu[variant*="horizontal"] a {
    transition: font-size 0.3s cubic-bezier(0, 1, 0.5, 1);
    transition: color .5s;
  }
  .nav[variant="sub"][state*="down"][state*="active"],
  .nav[variant*="top"][variant*="sub"][state*="down"][state*="active"] {
    top: -90px;
    height: 90px;
  }
  .nav[variant="sub"][state*="down"][state*="active"] .bar.secondary,
  .nav[variant*="top"][variant*="sub"][state*="down"][state*="active"] .bar.secondary {
    top: -90px;
  }
  .nav[variant="sub"][state*="down"][state*="active"] .menu[variant*="horizontal"] li,
  .nav[variant*="top"][variant*="sub"][state*="down"][state*="active"] .menu[variant*="horizontal"] li {
    line-height: 90px;
  }
  .nav[variant="sub"][state*="up"][state*="active"],
  .nav[variant*="top"][variant*="sub"][state*="up"][state*="active"] {
    height: 90px;
  }
  .nav[variant="sub"][state*="up"][state*="active"] .bar.secondary,
  .nav[variant*="top"][variant*="sub"][state*="up"][state*="active"] .bar.secondary {
    height: 90px;
    line-height: 90px;
  }
  .nav[variant="sub"][state*="up"][state*="active"] .menu[variant*="horizontal"],
  .nav[variant*="top"][variant*="sub"][state*="up"][state*="active"] .menu[variant*="horizontal"] {
    width: 100%;
  }
  .nav[variant="sub"][state*="up"][state*="active"] .menu[variant*="horizontal"] li,
  .nav[variant*="top"][variant*="sub"][state*="up"][state*="active"] .menu[variant*="horizontal"] li {
    line-height: 90px;
  }
  .nav[variant="sub"] {
    top: 0;
    width: 100%;
    box-sizing: border-box;
    padding-left: 228px;
    background-color: #101417;
    transition: transform 0.9s cubic-bezier(0, 1, 0.5, 1);
    transition-delay: 0s;
    transform: translateY(-66px);
  }
  .nav[variant="sub"][state="active"] {
    transition-delay: .75s;
    transform: translateY(0);
  }
  .nav[variant="sub"] .bar {
    overflow-x: auto;
    overflow-y: hidden;
    text-align: center;
  }
}

@media screen and (min-width: 751px) and (max-width: 1024px) {
  .nav[variant="sub"] .menu[variant*="horizontal"] > li > a {
    padding: 5px 16px;
  }
}

@media screen and (max-width: 750px) {
  .nav[variant*="top"][variant*="sub"] .bar.secondary {
    display: none;
  }
  .nav[variant="sub"] {
    display: none;
  }
}

.nav[variant*="top"][variant*="modal"] .tool .bars {
  opacity: 0;
}

.nav[variant*="top"][variant*="modal"] .tool .arrow {
  opacity: 0;
}

.nav[variant*="top"][variant*="modal"] .tool .cross {
  opacity: 1;
}

@media screen and (max-width: 750px) {
  .nav[variant*="top"][variant*="logo"] .logo {
    display: block;
  }
}

.nav[variant*="top"][variant*="logo"] .title {
  display: none;
}

.nav[variant*="mobile"][state*="active"] ~ .nav[variant*="top"] .bar.main {
  background-color: rgba(0, 0, 0, 0.3);
}

.nav[variant*="mobile"][state*="active"] ~ .nav[variant*="top"] .bar.secondary {
  opacity: 0.2;
  transform: translateX(-80%);
}

.nav[variant*="mobile"][state*="active"] ~ .nav[variant*="top"] .logo,
.nav[variant*="mobile"][state*="active"] ~ .nav[variant*="top"] .title {
  opacity: 0.2;
  transform: translateX(-600px);
}

.nav[variant*="mobile"][state*="active"] ~ .nav[variant*="top"] .tool {
  right: 81%;
  margin: 0 10px;
  max-width: calc(20% - 20px);
}

.nav[variant*="mobile"][state*="active"] ~ .nav[variant*="top"] .tool .bars {
  opacity: 0;
}

.nav[variant*="mobile"][state*="active"] ~ .nav[variant*="top"] .tool .cross {
  opacity: 1;
}

.footer.container {
  overflow: hidden;
  position: relative;
  z-index: 2;
  padding: 0 20px;
  left: 0;
  right: 0;
  bottom: 0;
  max-width: 1100px;
  width: auto;
  margin: 0 auto;
  transform: translate3d(0, 0, 0);
}

@media screen and (max-width: 750px) {
  .footer.container .secondary-desktop {
    display: none;
  }
  .footer.container .secondary-mobile {
    display: block;
  }
}

@media screen and (min-width: 751px) {
  .footer.container .secondary-desktop {
    display: block;
  }
  .footer.container .secondary-mobile {
    display: none;
  }
}

@media screen and (max-width: 750px) {
  .footer.container {
    width: 100%;
    width: 100vw;
    max-width: 100vw;
    padding: 0;
    margin: 0;
  }
}

@media screen and (min-width: 751px) {
  .footer.container {
    padding-left: 60px;
    padding-right: 60px;
  }
}

@media screen and (min-width: 1449px) {
  .footer.container {
    width: 1100px;
  }
}

.footer.container[variant='hidden'] {
  position: relative;
  opacity: 0.000001;
}

.footer.container[variant='absolute'] {
  position: absolute;
  left: 0;
  right: 0;
  z-index: 25;
}

@media screen and (max-width: 750px) {
  .footer.container[variant='absolute'] {
    width: 100vw;
  }
}

.footer.container[variant='absolute'][modifier='haslegal'] {
  bottom: 110px;
}

@media screen and (max-width: 750px) {
  .footer.container[variant='absolute'][modifier='haslegal'] {
    bottom: 100px;
  }
}

.footer.unit h1, .footer.unit h2, .footer.unit h3, .footer.unit p {
  margin: 0;
}

.footer.unit[variant*="company"] .menu {
  display: block;
  list-style: none;
  font-family: 'Title', 'Title Fallback 1', 'Title Fallback 2', sans-serif;
  text-transform: uppercase;
}

.footer.unit[variant*="company"] .menu[variant*="main"] {
  color: #9898ab;
}

.footer.unit[variant*="company"] .menu[variant*="main"] li:hover {
  color: white;
}

.footer.unit[variant*="company"] .menu[variant*="main"] .text {
  fill: currentColor;
}

.footer.unit[variant*="company"] .menu[variant*="secondary"] {
  color: #e2e2ed;
}

.footer.unit[variant*="company"] .menu[variant*="secondary"] li {
  cursor: pointer;
}

.footer.unit[variant*="company"] .menu[variant*="secondary"] li:hover {
  color: white;
}

.footer.unit[variant*="company"] .menu[variant*="secondary"] .text {
  fill: currentColor;
}

.footer.unit[variant*="company"] .menu[variant*="secondary"] > li > a {
  cursor: pointer;
  line-height: 24px;
  text-align: center;
}

.footer.unit[variant*="company"] .menu img {
  vertical-align: middle;
  display: inline;
  max-height: 28px;
  opacity: 0.8;
}

.footer.unit[variant*="company"] .menu img:hover {
  opacity: 1;
}

@media screen and (max-width: 750px) {
  .footer.unit[variant*="company"] {
    background: #0b0e10;
    padding-bottom: 20px;
  }
  .footer.unit[variant*="company"] .icon[name="enjoy-responsibly"] {
    height: 42px;
    width: 42px;
    margin: 10px;
  }
  .footer.unit[variant*="company"] .icon[name="world"] {
    margin-left: 5px;
    width: 18px;
    height: 18px;
    vertical-align: middle;
    margin-top: -4px;
  }
  .footer.unit[variant*="company"] .menu {
    list-style: none;
    text-transform: uppercase;
  }
  .footer.unit[variant*="company"] .menu > li {
    overflow: hidden;
    font-size: 15px;
    font-family: 'Title', 'Title Fallback 1', 'Title Fallback 2', sans-serif;
  }
  .footer.unit[variant*="company"] .menu > li > div,
  .footer.unit[variant*="company"] .menu > li > a {
    display: block;
    line-height: 34px;
    padding: 20px 10px;
    text-align: center;
  }
  .footer.unit[variant*="company"] .menu > li > a:hover,
  .footer.unit[variant*="company"] .menu > li div:hover,
  .footer.unit[variant*="company"] .menu > li[state="active"] > a {
    background: rgba(158, 186, 196, 0.06);
    color: #c3c3ce;
  }
}

@media screen and (min-width: 751px) {
  .footer.unit[variant*="company"] {
    overflow: hidden;
    margin: 15px -10px 20px -10px;
  }
  .footer.unit[variant*="company"] .icon[name="enjoy-responsibly"] {
    height: 42px;
    width: 42px;
  }
  .footer.unit[variant*="company"] .icon[name="world"] {
    margin-left: 5px;
    width: 16px;
    height: 16px;
    vertical-align: middle;
    margin-top: -4px;
  }
  .footer.unit[variant*="company"] .menu {
    font-size: 14px;
    line-height: 44px;
  }
  .footer.unit[variant*="company"] .menu[variant*="main"] {
    float: left;
  }
  .footer.unit[variant*="company"] .menu[variant*="secondary"] {
    float: right;
  }
  .footer.unit[variant*="company"] .menu > * {
    display: inline-block;
    padding: 0 10px;
    white-space: nowrap;
  }
}

.footer.unit[modifier*="centered"] {
  text-align: center;
}

.footer.unit[modifier*="centered"] .menu[variant*="main"],
.footer.unit[modifier*="centered"] .menu[variant*="secondary"] {
  float: none;
  display: block;
}

.footer.unit[modifier*="bright"] {
  color: white;
}

.footer.unit[modifier*="bright"] .menu[variant*="main"],
.footer.unit[modifier*="bright"] .menu[variant*="secondary"] {
  color: white;
}

.footer.unit[modifier*="gateway"] {
  background-color: transparent;
}

.footer.unit[modifier*="gateway"] .menu[variant*="main"] {
  display: inline-table;
}

.footer.unit[modifier*="gateway"] .menu[variant*="main"] li {
  float: left;
}

@media screen and (min-width: 751px) {
  .trigger.container + .footer {
    padding-left: 11%;
    padding-right: 11%;
    max-width: 100%;
  }
  .product.container ~ .footer.container {
    box-sizing: border-box;
    position: absolute;
    bottom: 0;
    z-index: 3;
    left: 0;
    right: 0;
    padding-right: 0;
    margin-right: 125px;
    width: 90%;
    width: calc(100vw - 125px);
    max-width: 100vw;
  }
  .product.container ~ .footer.container[modifier="haslegal"] {
    bottom: 110px;
  }
  .product.container ~ .footer + .legal {
    background-color: transparent;
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    right: 90px;
  }
  .product.container ~ .footer + .legal .unit {
    padding: 0 0 0 60px;
  }
  .faq.container ~ .footer.container {
    max-width: 880px;
  }
}

@media screen and (min-width: 751px) and (min-width: 1015px) {
  .faq.container ~ .footer.container {
    width: 100%;
  }
}

.legal.container {
  font-size: 12px;
  font-family: 'Subtitle', 'Default Fallback', sans-serif;
  text-transform: uppercase;
  line-height: 24px;
  background-color: #101417;
  color: #6c6e7b;
}

@media screen and (max-width: 750px) {
  .legal.container {
    text-align: center;
  }
}

.legal.container .unit {
  transform: translate(0, 0);
  padding: 17px 60px;
  margin-left: auto;
  margin-right: auto;
  width: auto;
  max-width: 1220px;
  text-align: left;
  box-sizing: border-box;
}

@media screen and (max-width: 750px) {
  .legal.container .unit {
    padding: 20px;
  }
}

.legal.container .unit h1,
.legal.container .unit h2,
.legal.container .unit h3,
.legal.container .unit p {
  margin: 0;
  color: #6c6e7b;
  text-align: inherit;
}

.legal.container .unit[modifier*="center"] {
  text-align: center;
}

.legal.container .unit[modifier*="bright"] {
  background: #6c6e7b;
  color: white;
}

.legal.container .unit h3 {
  font-size: 14px;
  margin-bottom: 6px;
}

.legal.container .unit a {
  text-decoration: underline;
}

.legal.container[variant="fixed"] {
  position: fixed;
  left: 0;
  bottom: 0;
  right: 0;
  z-index: 6;
  height: 110px;
  width: 100%;
  max-width: 100vw;
  box-sizing: border-box;
  overflow: auto;
}

@media screen and (max-width: 750px) {
  .legal.container[variant="fixed"] {
    height: 100px;
  }
}

.legal.container[variant='hidden'] {
  height: 110px;
  width: 100%;
  max-width: 100vw;
  opacity: 0.00001;
  overflow: hidden;
}

@media screen and (max-width: 750px) {
  .legal.container[variant='hidden'] {
    height: 100px;
  }
}

.viewport[state="pushed-right"] ~ .legal.container[variant='fixed'] {
  padding: 0 0 0 228px;
}

html.lt-ie9 [variant*="mobile"].nav {
  display: none;
}

html.lt-ie9 .nav .logo {
  background: url("/browser-resources/img/logo.png") center no-repeat;
  height: 67px;
  width: 93px;
}

html.lt-ie9 .nav .logo img {
  display: none;
}

html.lt-ie9 .nav .tool {
  width: 55px;
}

html.lt-ie9 .nav .tool a {
  height: 100%;
  width: 100%;
  background: url("/browser-resources/img/icons/home.png") center no-repeat;
  position: absolute;
  right: 0px;
  top: 0px;
}

html.lt-ie9 .close-button {
  height: 55px;
  width: 55px;
}

html.lt-ie9 .close-button a {
  height: 100%;
  width: 100%;
  background: transparent url("/browser-resources/img/icons/close.png") center no-repeat;
  background-color: transparent !important;
}

html.lt-ie9 .close-button span {
  display: none;
}

html.lt-ie9 .gateway .logo, html.lt-ie9 .gateway-message .logo {
  background: url("/browser-resources/img/logo.png") center no-repeat;
  height: 67px;
  width: 100%;
}

html.lt-ie9 .gateway .logo img, html.lt-ie9 .gateway-message .logo img {
  display: none;
}

html.lt-ie9 .container.gateway-message [variant*=""].button {
  border: 3px solid #fff;
}

html.lt-ie9 .container.gateway-message [variant*="positive"].button {
  border: 3px solid #47a742;
}

html.lt-ie9 .container.gateway-message [variant*="negative"].button {
  border: 3px solid #c52118;
}

html.lt-ie9 .rtf .button-black-transparent, html.lt-ie9 .rtf .button-black-transparent-border {
  background-color: #171c1f;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=80)";
  filter: alpha(opacity=80);
}

html.lt-ie9 .rtf .button-black-transparent-border, html.lt-ie9 .rtf .button-transparent-border {
  border: 3px solid #fff;
}

html.lt-ie9 .rtf .button-black-transparent:hover,
html.lt-ie9 .rtf .button-black-transparent-border:hover,
html.lt-ie9 .rtf .button-transparent-border:hover {
  background: #fff;
}

html.lt-ie9 [variant*=""].trigger .link {
  background-color: #171c1f;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
  filter: alpha(opacity=0);
}

html.lt-ie9 .container .faq .unit.list .title {
  background: transparent;
}

html.lt-ie9 .container .faq .list[state*=""] button {
  background: transparent url("/browser-resources/img/icons/plus.png") center no-repeat;
}

html.lt-ie9 .container .faq .list[state*="active"] button {
  background: transparent url("/browser-resources/img/icons/min.png") center no-repeat;
}

html.lt-ie9 .nav[variant*="side"] .logo {
  width: 100%;
}

html.lt-ie9 .nav[variant*="side"] .follow span[variant*="hidden"] {
  display: block;
}

html.lt-ie9 .nav[variant*="top"][state*="up"][state*="active"], html.lt-ie9 .nav[variant*="top"][state*="down"][state*="active"] {
  top: 0 !important;
}

html.lt-ie9 .nav[variant*="top"] .secondary.bar {
  top: 0 !important;
}

html.lt-ie9 [variant*="top"][variant*="sub"][state*="down"][state*="active"].nav .menu[variant*="horizontal"] li {
  line-height: 30px !important;
}

html.lt-ie9 .cookies.unit {
  margin: 0 auto;
  position: absolute;
  left: 50%;
  top: 50%;
  margin-left: -155px;
  margin-top: -155px;
}

html.lt-ie9 .full-viewport.container [variant*="image"].full-viewport.unit img {
  top: 0;
}

html.lt-ie9 .full-viewport.container .full-viewport-socials .social-link {
  background: #000;
}

html.lt-ie9 .container.product .menu.unit UL LI A:hover div {
  border: none;
  margin: 0;
}

html.lt-ie9 .container.product .menu.unit UL LI A:hover span {
  display: block;
}

html.lt-ie9 .product-list.container {
  height: 1000px;
}

html.lt-ie9 .product-list.container .carousel {
  visibility: collapse;
  position: absolute;
  left: -9000px;
}

html.lt-ie9 .product-list.container .menu .icon-block img {
  display: none;
}

html.lt-ie9 .product-list.container .icon {
  display: none;
}

html.lt-ie9 .product-list.container .title-block {
  margin-top: 300px;
}

html.lt-ie9 .product-list.container .background[state="zoom"] .bg.normal {
  display: none;
}

html.lt-ie9 .product-list.container .background[state="normal"] .bg.zoom {
  display: none;
}

html.lt-ie9 .product-list.container .background .image {
  height: 1000px;
}

html.lt-ie9 .product-list.container .background .image .normal {
  height: 1000px;
}

html.lt-ie9 .product-list.container .background .image .zoom {
  height: 1000px;
}

html.lt-ie9 .legal.container[variant='hidden'] {
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
  filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=0);
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
